This note is created to work as a notebook but its possible search through it.
due to continuing on keeping notes on digital notepad, the data is written after Day 23 but previous days will be covered.


### Day 23 EtherChannel ###

(ASW) Access Layer Switch: a switch that end hosts connect to 
(DSW) Distribution layer Switch: a Switch that access layer switches connect to. 

Oversubscription: when the bandwidth of the interfaces connected to end hosts is greater that the bandwidth of the connection to the distribution switches (DSW). to much of oversubscription causes congestion.

problem can be fixed by ethernetChannel:
if you connect two switches together with multiple links (say for improving the band width), all except one will be disabled by spanning tree to prevent broadcast storm and layer 2 loops. so other links will be unused unless the active link fails, and then one of the inactive links will start forwarding.
thus, EtherChannel groups multiple interfaces together to act as a single interface.
STP will treat this group as a single interface.

in EtherChannel, Traffic is load balanced among the physical interfaces. an Algorithm is used to determine which traffic should be on which physical interface.

some other names for etherChannel:
Port Channel
LAG (Link Aggregation Group)

EtherChannel load balance is based on 'Flows'.
A flow is a communication between two nodes in the network.
Frames in the same flow will be forwarded using the same physical interface. if frame in the same flow is forwaded using different interface it can cause problem for some applications.
so, etherchannel uses algorithm to channel different flows from different interfaces.

the two inputs for the selection calculation in etherchannel are based on:
Source MAC
Destination MAC
Source IP
Destination IP
and some cases the inputs are on L4 (Transport), the TCP and UDP
note: inputs are based on type and model of switches.

command:
show etherchannel load-balance => to see the switch load balancing inputs
note:
non-IP: some packet may not be encapsulated in Ethernet frame so there is no IP address to be used so the MAC addresses are used.

command:
conf t
port-channel load-balance (method; example:src-dst-mac) => configures method of load-balancing configuration.

three methods for EtherChannel configuration on Cisco Switches:
1.PAgP (Port Aggregation Protocol): Cisco Proprietary. Dynamically negotiates the creation/maintenance of the EtherChannel (like DTP does for trunks)
2.LACP (Link Aggregation Control Protocol): Industry standard protocol (IEEE 802.3ad)
Dynamically negotiates the creation/maintenance.
3.Static EtherChannel: interfaces are statically configured to form an EtherChannel.

note:
up to 8 interaces can be formed into a single EtherChannel. however in LACP, 16 are allowed by 8 of them will be in standby mode.

command:
steps for PAgP configuration
ASW(config)# interface range g0/0 - 3 => for instance selecting range of interfaces.
(config-if-range)# channel-group (num to indentify the virtual interface ex:1) mode ( desirable or auto) => to establish PAgP on the selected range of interfaces. 

steps for LACP configuration
similar to PAgP but,
(config-if-range)# channel-group (num to indentify the virtual interface ex:1) mode ( active, passive) => active (for LACP unconditionally) and passive (for only if a LACP device is detected) 

steps for Static configuration
similar to previous ones but,
(config-if-range)# channel-group (num to indentify the virtual interface ex:1) mode on => on mode only works with on mode on the other side to form static etherChannel.

Manually configure the negotiation protocol by channel-protocol
command:
channel-protocol (lacp, pagp) => this command will manually configure interface to prepare for lacp or pagp configuration

show ip interface brief => shows table 

EtherChannel Configuration notes:
• Members interfaces must have matching configurations:
	same duplex (half/full)
	same switch port mode (trunk/access)
	same speed
	same allowed VLANs/native VLAN (for trunk interfaces)
• if an interface's configurations do not match the others, it will be excluded from the EtherChannel

command:
show etherchannel summary => it will show status of etherchannel of switch

show etherchannel port-channel => shows number of ports and protocol and also channel group mode.

show spanning-tree => by using this command after configuration you can confirm that STP is treating all as a single interface or not.

layer 3 switches (multilayer switches)
if you take out a multilayer switch from layer 2 switchports there is no need to run spanning-tree at all because routed ports don't forward layer 2 broadcasts, so no layer 2 loops can be formed.
for such functionality, ' no switchport ' command is used 
however for layer 3 we need ip address for interfaces and that ip address is set on port-channel interface



### Day 24 Dynamic Routing ###

in routing table
Network route: A route to a network/subnet (mask length < /32) actually shown by C

host routes: host route is a route to a specific host (/32 mask), a single address. it is shown by L

routes can be adveritsed by the router that has that subnet. however if the router that is advertising the route is out of reach the table will be updated and the route will be removed to prevent sending data to dead-end

routers can used dynamic routing protocols to advertise information about the routes they know.
they form adjacencies/ neighbor relationships/ neighborships with adjacent routers to exchange this information.

if mutliple routes to a destination are learned, the router determines which router is superior and adds it to the routing table.
it uses 'metrics' of the route to decide which is superior (lower metric = superior)

dynamic routing protocls can be devided into two main categories:
IGP (Interior Gateway Protocol) = used to share routes within a single autonomous system (AS), which is a single organization ( for example routers inside a compnay A)
EGP (Exterior Gateway Protocol) = used to share routes between different Autonomous systems ( example connection of a router inside company A to router inside ISP A )

Algorithm types in Dynamic routing Protocols (processes each protocol uses to share route information and choose te best route)

IGP:
1. Distance Vector. example:
	Routing Information Protocol (RIP) ,
	Enhanced Interior Gateway Routing Protocol (EIGRP)
2.Links State. example:
	Open shortest Path First (OSPF)
	Intermediate System to Intermediate System (IS-IS)
EGP:
Path Vector. example: 
	Border Gateway Protocol (BGP)

DIstance Vector Routing Protocols:
this protocol were invented before links state. Distance vector operates by sending the following information to their directly connected neighbors
	their known destination networks
	their metric to reach their known destination network
this method of sharing route information is often called 'routing by rumor'
this is because the router doesn't know about the network beyond its neighbors. it only knows the information that its neighbors tell it.

Link State Routing Protocols:
in Link State protocols, every router creates a 'connectivity map' of the network
to allow this each router advertises information about its interfaces (connected to network) to its neighbors. these advertisment is passed along until all routers in the newtork develop the same map of the network.
each router independenly uses this map to calculate the best route to each destination
Link State protocol uses more resource (CPU) on the router because more information is shared.
however, link state tend to be faster in reacting to changes in the network than distance vector.

Metrics in Dynamic Routing
metric values are used for the routes to be determined which is the best. A low metric is better.
each routing protocl uses a diffrerent metric to determine which route is the best.

if a router learns two (or more) routes via the same protocol and same destination ans same metric, all will be added to the routing table and the traffic will be load-balanced over both routes.
this is called ECMP (Equal Cost Multi-cast)

note:
Static routes don't use metrics and in routing table the metric is 0 and administrative distance is also 1.

Protocl metrics:
Protocol			Metric
RIP 				Hop Count
EIGRP			Metric based on Bandwith & delay (by default)
OSPF			Cost
IS-IS			Cost


RIP:Hop count = each router in the path counts as 1 hop. the links of all  speeds are equal.

EIGRP: bandwith & delay = the bandwidth of the slowest link in the route and the total delay of all links in the route are used.

OSPF:Cost = the cost of each link is calculated based on bandwidth the total metric is the total cost of each link in the route.

IS-IS:Cost = the total is the total cost of each link in the route. the cost of each link is not automatically calculated by default and all links have a cost of 10 by default.

Administrative Distance:
different routing protocol use different metrics, so they cannot be compared. so the administrative distance (AD) is used to determine which routing protocol is preferred.
a lower AD is preferred and indicates that the routing protocl is considered more trustworthy.

Route protocol/type			AD
Directly connected				0
Static						1
External BGP(eBGP)			20
EIGRP						90
IGRP						100
OSPF						110
IS-IS						115
RIP							120
EIGRP(external)				170
Internal BGP (iBGP)			200
Unusable route				255
 
note:
AD can be changed for static router or other protocols



### Day 25 RIP & EIGRP ###
RIP: Routing information Protocol (industry standard)
RIP is a distance vector routing ( uses routing-by-rumor to learn/share routes)
it uses hop count as its metric. one router = one hop (bandwidth is irrelevant)
the maximum hop count is 15 and more that that is considered unreachable so the RIP is not used in large network and also it is not used in nowadays network alot.
has three version: RIPv1 RIPv2 for IPv4 and RIPng(next generation) for IPv6
it uses two massage types:
Request: to ask RIP-enabled neighbor routers to send their routing table
Response: to send the local router's routing table to neighboring routers
by default information is shared every 30 seconds

RIPv2 (improved version of v1) for instance:
it supports VLSM, CIDR and not just classful addresses (class A,B,C)
it includes subnet mask information in advertisements
messages are multicast to 224.0.0.9 and not broadcast in 255.255.255.255

multicast: messages are delivered only to devices that have joined that specific multicast group.

RIP configuration
(config) # router rip => to enable the rip routing protocl
(config-router) #version 2 => it enables the RIP version 2
(config-router) # no auto-summary => auto-summary converts the networks to classful network, so needs to be shutdown.
(config-router) # network 10.0.0.0 => this command is classful, it will automatically conver to calssful network.
the network command tells:
look for interfaces with an IP address that is in the specified range.
active RIP on the interfaces that fall in the range
form adjacencies with connected RIP neighbors
advertise the network prefix of the interface (not the prefix in the network command)
note: the OSPF and EIGRP network commands operate in the same way
also note that the network commadn doesn't tell the router which networks to advertise. it tells the router which interfaces to activate RIP on, and then the router will advertise the nwtwork prefix of those interfaces.

(config-router) # passive-interface g2/0 => if there are no RIP neighbors to the interface (G2/0), the router will send RIP advertisment out of that interface so it cause unnecessary traffic, so passive interface tells to stop advertising on that interface.

advertise a default route into RIP:
(config) # ip route 0.0.0.0 0.0.0.0 (next hop interface IP) 
(config-router) # default-information originate => it will advertise the default route to the internet.

note:
RIP also do load-balancing, if the hops are equal.

show ip protocols:
R1#show ip protocls => it will give information about protocl being used in that router.


Enhanced Interior Gateway Routing Protocol (EIGRP)
it was Cisco proprietary, but Cisco has now published it.
EIGRP is considered an 'advanced/hybrid distance vector routing protocol
much faster than RIP in reacting to changes over network
does not have the 15 hop-count limits so it can be used in larger networks.
send messages using multicast address 224.0.0.10
it is the only IGP that can perfom unequal-cost load-balancing (by default it performs ECMP load-balancing over 4 paths like RIP)

EIGRP configuration:
(config) #router eigrp 1
(config-router) # no auto-summary
(config-router) #passive-interface g2/0
(config-router) # network 10.0.0.0
(config-router) # network 172.16.1.0. 0.0.0.15

EIGRP uses a wildcard msak instread of a regular subnet mask
a wildcard mask is basically an 'inverted' subnet mask.
all 1s in the subnet mask are 0 in the equivalent wildcard mask. all 0s in the subnet mask are 1 in the equivalent wildcard mask.

11111111.11111111.11111111.00000000
255.255.255.0
it will become:
00000000.00000000.00000000.11111111
0.0.0.255
/24
shortcut is to subtract each octet of the subnet mask from 255

'0' in the wildcard mask = must match
'1" in the wildcard mask = don't have to match
if it matches the EIGRP will be activated on the interface

10101100.00010000.00000001.00001110 => 172.16.1.14
EIGRP network command:
10101100.00010000.00000001.00000000 => 172.16.1.0
00000000.00000000.00000000.00001111 => 0.0.0.15

router ID order priority in EIGRP
1.manual configuration
2.Highest IP address on a loopback interface
3.Highest IP address on a physical interface

in show ip route the EIGRP is shown by 'D'

Lab Notes:

EIGRP metric is actually a formula that include the bandwidth and delay, in simple word:
it is actually bandwidth of the slowest link + the delay of all links

EIGRP terminology:
Feasible Distance (FD) = this router's metrics value to the route's destination.
Reported Distance (aka Advertised Distance) = the neighbor's metric value to the route's destination
Successor = the route with the lowest metric to the destination ( the best route)
Feasible Successor = an alternate route to the destination ( not the best route)
a route is considered feasible successor if it's reported distance is lower than the successor route's feasible distance.

EIGRP unequal-cost load-balancing

example
EIGRP maximum metric variance 1
Variance 1 = only ECMP load-balancing will be performed.
Variance 2 = feasible successor routes with an FD up to 2x the successor route's FD can be used to load-balance

note:
EIGRP will only perform unequal-cost load-balancing over feasible successor routes, regardless of the variance.



### Day 26 OSPF Part 1 ###

OSPF (Open Shortest Path First) is a Link state routing protocol which it means that it creates a map of network connectivity.

OSPF uses the shortest path first algorithm which is known as Dijkstra's algorithm

Version of OSPF:
OSPFv1: not in use any more
OSPFv2 used for ipv4
OSPFv3 (2008): used for IPv6

Routers store information about the network in LSAs (Link State Advertisements), which are organized in a structure called the LSDB (Link State DataBase)

Routers will flood LSAs untill all the routers in the OSPF area develope the same map of the network (LSDB)

Basic information in LSA:
RID (Router ID): 4.4.4.4 (it can be a loopback or manually configured and became RID)
IP: 192.168.4.0/24 (ip of the route)
Cost: 1

procedure of LSA and LSDB in OSPF:
1.OSPF is enable on Router interface
2.Router creates an LSA to tell its neighbors about the network of that interface
3.LSA is flooded throughout the network until all routers have received it
4. this results in all routers sharing the same LSDB
5.each router then uses the SPF algorithm (dijkstra) to calculate its best route to that route.
note:
LSA has 30min by default the LSA will be flooded  again after the timer expires.


OSPF Area:
OSPF uses areas to divide up the network
small networks can be single-area without any negative effects on perfomance.

In larger networks, a single-area design can have negative effects:
-the SPF algorithm takes more time to calculate routes
- the the SPF algorithm requires exponentially more processing powerr on the routes
- the larger LSDB takes up more memory
- any small change in the network causes every router to flood LSAs and run the SPF algorithms again.

by dividing a large OSPF network into several smaller areas, you can avoid the above negative effects

OSPF Areas:
• Area 0 (Backbone) 
• an Area is a set of router and lins that share the same LSDB.
• the backbone area (area 0)  is an area that all the other areas must connect to.
• Routers with all interfaces in the same area are called internal routers.
• Routers with interfaces in multiple areas are called Area Router Borders (ARBs)
note: ABRs maintain separate lSDB for each areas connected to. it is recommended to connected ABRs to maximum of 2 areas, cause more that that can cause overburden the router.
• Routers connected to the backbone area (area 0) are called backbone routers.
• An intra-area route is a route to destination inside the same OSPF area.
• an interarea route is a route to a destination in a different OSPF area.

OSPF important rules:
• OSPF areas should be contiguous. it means that areas should not be divided or splitted up into different parts.
• All OSPF ares must have at least one ABR connected to the backbone area.
• OSPF interfaces in the ame subnet must be in the same area.


Basic OSPF Configuration
1. R(config) # router ospf (process id) => a router can run multiple process at once and this OSPF is one of them. and this command will enable OSPF process on the router
note: the OSPF process ID is locally significant nad routers with different process IDs can become ISPF neighbors. (unlike EIGRP which uses AS (autonomous system id) to work)

2. R(config-router) #network 10.0.12.0 0.0.0.3 area 0 => OSPF uses wildcard mask just like EIGRP and also the area should be defined.

• R(config-router) #passive-interface g2/0 => the passive-interface command tells the router to stop sending OSPF 'hellow' messages out of the interface.
however the router will continue to send LSAs informing it's neighbors about the subnet configured on the interface.
use this command on interfaces which don'y have any OSPF to stop wasting resources.

advertise a default route into OSPF
• R(config) #ip route 0.0.0.0 0.0.0.0 (ip interface of the next hop to default route example: 203.0.113.2) 

• R(config-router) #default-information originate => the command to advertise the default route into OSPF. it causes the router to create a new LSA to flood it.
by show ip route it can be checked.

• show ip protocol => to check out the protocol information.

Router ID order of Priority:
1. Manual configuration
2. Highest IP address in a loopback interface
3. Highest IP address on a physical interface

to change router id:
• R(config-router) #router-id (the ip)
and then use Reload or `clear ip ospf process` (not recommended in real network) to clear the previous id and set the new id.

in show ip protocol:
the field "autonomous system boundary router (ASBR) is an OSPF router that connects the OSPF network to an external network. for instance the Router that is connected to the internet and has `default-information originate` is a ASBR.

note:
OSP doesn't support unequal-cost load-balancing but it does support ECMP (equal cost multiple path) load-balancing.
in show ip protocols for OPSF, "maximum path: 4" it means the ECMP load balancing
• R(config-router) #maximum-paths (number of paths) => it will change the maximum paths for OSPF router.



### Day 27 OSPF part 2 ###

OSPF's metric is called cost. it is based on the bandwidth (speed) of the interface and calculated by dividing a refrence bandwidth value by the interfcae's bandwidth.

the default reference bandwidth is 100 mbps:
	Reference 100 mbps/Interface 10mbps = 10 cost
	Reference of 100 mbps/ Interface 100 mbps = 1 cost
	Reference of 1000 mbps/Interface 1000 mbps = 1 cost
All values less than 1 will be converted to 1. therefore FastEthernet, Gigabit Ethernet, 10Gig Ethernet. are equal and all ave a cost of 1 by default.

command to check for cost of an interface on the router:
• R#show ip ospf interface (interface)

due to this calculation over interfaces on OSPF protocol the cost of each interface should be change.
to change the reference bandwidth:
• R1(config-router)# auto-cost reference-bandwidth (megabits-per-second)
note: the command is entered megabits per second (default is 100) thus for better calculate that number should be increase to more in order to make distinction between interfaces cost.
for example:
	100000 / 100 mbps interface = 1000
	100000 / 1000 mbps (1Gbps) interface = 100
you should configure a reference bandwidth greater than the fastest links in your network (for future upgrades in bandwidth)
note that same reference should be configured on all OSPF networks.

loopback interfaces have cost of 1. for example:
if a router with 1Gbps and reference of 10000 is connected to loopback 4.4.4.4 of another router interface the cost will be:
1Gps interface (100) + loopback interface (1) = 101


cost can also be manually changed by:
• R(config) #interface g0/0
• R(config-if) #ip ospf cost (cost 1-65535)

then the cost can be checked by:
• show ip ospf interface (interface)

one more option to change the OSPF cost of an interface is to change bandwidth of that interface. by command `bandwidth`.
bandwidth is used because the calculation is reference bandwidth / interface bandwidth = cost
keep in mind that changing the bandwidth does not affect over speed of that interfaces.
the bandwidth is just a value that is used to calculate OSPF cost and etc.
• R1(config-if)# bandwidth (<1-100000000> kilobits) => kilobits is used for changing the bandwidth

to change the speed at which the interface operates, use `speed` command.

it is not recommended to change the bandwidth value to alter the interface's OSPF cost. because the bandwidth value is used in other calculations.

however it is recommended that you change the reference bandwidth, and then use the `ip ospf cost` command to change individual interfaces.

thus there are three ways to modify interface cost:
1. by changing the reference bandwidth # R(config-if) # auto-cost reference-bandwidth (mbps)
2. by manual configuration: R(config-if) #ip ospf cost (cost 1-65535)
3. by changing the interface bandwidth: R(config-if) #bandwidth (kbps)

for checking the cost of interfaces
• R #show ip ospf interface brief => shows the cost of each interface on the router


OSPF neighbors procedure:
when OSPF is activated on an interface, the router starts sending OSPF hello messages out of the interface at regular intervals (determined by the hello timer). these are used to introduce the router  to potential OSPF neighbors. the default hello timer is 10 seconds o an Ethernet connection.

Hello messages are multicast to 224.0.0.5 (multicat adress for all OSPF routrs). and OSPF messages are encapsulaed in an IP header, with a value of 89 (0x59 in hexadecimal) in the Protocol field.


Process of OSPF neighboring

'Down state'
1.1 OSPF is activated on the router interface
1.2 R1 sends an OSPF hello message to 224.0.0.5 
1.3 it doesn't know about any OSPF neighbors yet, so the neighbor state is "Down" and in hello message the neighbor RID is 0.0.0.0

'Init state'
2.1 when R2 receives the hello packet, it will add an entry for R1 to its OSPF neighbor table.
2.2 the R2's neighbor table, the relationship with R1 is now in the "Init" state.
Init state = Hello packet is received, but destination router ID is not in the hello packet.

'2-way state'
3.3 R2 will send a hello paket containing the RID of both router. then R1 will insert R2 into its OSPF neighbor table in the 2-way state (after the R2 hello message with RID of R2 is received).
3.4 R1 will send another Hello message but this time with both RIDs of both Routers. now both routers are in the 2-way state.
2-way state = it means the router has received a hello packet with its own RID in it.
3.5 if both routers are in 2-way state it means the condition is met to share LSAs.

'Exstart state'
the two routers are now prepare to exchange information about their LSDB.
4.1 before that they have to choose which on will start the exchange. they do this in Exstart state.
4.2 The router with the higher RID will become the "Master" and initiate the exchange. the router with the lower RID will become the Slave.
4.3 to decide the Master and Slave, the y exhcnage DBD (Database Description) packets.

'Exchange State'
5.1in the exchange State the router exchange DBDs which contain a list of the LSAs in their LSDB. the DBDs do not include or load information on each other LSDB, just basic information and exchange of the overall data.
5.2 the routers compare the information in the DBD they received to the information in their own LSDB to determine which LSAs they must receive form their neighbors.

'Loading State'
6.1 in the loading state, the routers will send Link State Request (LSR) messages to request that their neighbor send them any LSAs thy don't have. its become possible due to DBDs that are exchanged in exchange state.
6.2 LSAs are sent Link State Update (LSU) messages.
6.3 the router then will send LSAck message sto acknowledge that they received the LSAs.

'Full State'
in the full state, the routers have a full OSPF adjacency and identical LSDBs.
they continue to send and listen for hello packets (every 10 seconds by default) to maintain the neighbor adjacency. evry time a hello packet is received the 'Dead' Timer (40 second by default) is reset.
if the dead timer counts down to 0 and no hello message is received the neighbor will be removed.
then router will continue to share LSAs as the network changes to make sure each router has a complete and accurate map of the network.


commands:
R#show ip ospf neighbor => shows information about OSPF neighbors to the router.


OSPF configuration:
R(config-if) #ip ospf (proces-id) area (area) => it will activate OSPF directly on the interface 

R(config-if) #router ospf 1
R(config-router) #passive-interface default => this command configure all interfaces as OSPF passive interface.

R(config-router) #no passive-interface (interface-id) => it disables the passive configuration.



### Day 28 OSPF part 3 ###

Loop back interfaces description:
A loopback interface is a virtual interface in the router. it is always up/up unless it is manually shut down.
it is not dependent on physical interface and it provides a consistent IP address that ccan be used to reach/identify the router


OSPF network types:
Thee are three main OSPF network types (type of connection)
1.Broadcast: enaled by default on ethernet and FDDI (Fiber Distributed Data Interfaces) interfaces.
2.Point-to-Point: enable by default on PPP (point-to-point protocol) and HDLC (High-Level Data Link Control) interfaces.
3.Non-broadcast: enbaled by efault on Frame Relay and X.25 interfaces

Broadcast Network Type:
Enabled on Ethernet and FDDI interfaces by default.
Routers dynamically discover neighbors by sending/listening for OSPF hello messages using multicast address 224.0.0.5
A DR (designated router) and BDR (backup designated router) must be elected on each subnet (only DR if there are no OSPF neighbors)
Routers which aren't the DR or BDR become a DROther.

the DR/BDR election order priority:
1.Highest OSPF interface priority
2.Highest OSPF Router ID
First place becomes the DR for the subnet 'second place' becomes the BDR

the default OSPF interface proirity is 1

• R(config-if) #ip ospf priority <0-255> => this command is used to change the interface priority.

note: if you set the OSPF interface priority to 0, the router cannot be the DR/BDR for the subnet.

important:
the DR/BDR election is 'non-preemptive'. once the DR/BDR are selected they willl keep their role until OSPF is reset. that is why interface with priority of 255 becomes DROther

in the broadcast network type,router still only form a full OSPF adjacency with the DR or BDR of the segment.
therefore, routers only exchange LSAs with the DR and BDR. DROthers will not exchange LSAs with each other.
all routers will still have the same LSDB, but this reduces the amount of LSAs flooding the network.

note:
Messages to the DR/BDR are multicast using address 224.0.0.6

DR and BDR state is between 2-way state - (DR/BDR election) - Exstart State

the DR & BDR will form a full adjacency with ALL routers in the subnet but the DROthers will only form a full adjacency with DR/BDR ((backup) Designated Route)

command: to check out the full adjacency and neighbor count.
• R#show ip ospf interface brief => it has the Nbrs F/C column which indicate the full adjacency and neighbor count of the routers in OSPF network.

• R# show ip ospf interface g0/0 => with show ip ospf interface the neighbor count and adjecancies can be shown.


Point-to-Point Network Type
- Enabled on serial interfaces using PPP or HDLC encapsulation by default.
- Routers dynamically discover neighbors by sending/listening OSPF Hello messages on multicast address 224.0.0.5
- A DR and BDR are not elected. no point to elected cuase its point to point connection.

Serial Interfaces (obsolete)
one side of a serial connection functions as DCE (Data Communiction Equipment). and the other as  DTE (Data Terminal Equipment)
the DCE side needs to spcify the "clock rate (speed)" of the connection.
the serial interfaces use clock rate command instead of speed in ethernet interfaces.

encapsulation method can change by:
• R(config-if) #encapsulation (type)
note: the default encapsulation is HDLC and you can configure it to PPP

configuration can be checked out by:
• R1 #show running-config interface s2/0

• R# show controllers (interface-id) => identify which side is DCE/DTE

•R(config-if)# clock rate (bits-per-second) => clock rate must be set for serial interface

note:
in point-to-point connection, the ip ospf neighbor shows "-" in state of interface. because it is not categorized.

you can configure the OSPF network type on an interface with:
R(config-if) # ip ospf network type

if two router are directly connected to each other there is no need for DR/BDR. the point-to-point connection can be established.

note: not all network types work on all link types (for example, a serial link cannot use the broadcast network type)


OSPF Neighbor Requirements
1. Area number must match. for instance all Neighbors should be in area 0

2.Interfaces must be in the same subnet. for instance, interface should be in 192.0.1.0 0.0.0.3 area 0 

3. OSPF process must not be shutdown

4. OSPF Router IDs must be unique
for example, R1 has 192.1.1.2 as it RID and R2 should have 192.1.1.2 as RID

5. Hello and Dead timers must match. it means that hello timer should be in smaller interval that Dead timer.

6. Authentication setting must match. in OSPF it is possible to set authentication key for OPSF connection and OSPF is only connected to the same authenticated OSPF interface.
command:
• R1(config-if) #ip ospf authentication-key (password) => it will set a password-key for that OSPF interface.
• R1(config-if) #ip ospf authentication => it will enable the authentication for that interface.

7. IP MTU (Maximum Transission Unit) settings must match.
note: can become OSPF neighbors, but OSPF doesn't operate properly. it will throw too many retransmissions error.
command:
• R(config-if) #ip mtu <68-1500 bytes>  => to set MTU of that interface
 
8. OSPF network type must match.


OSPF LSA types:
there are 11 types of LSA, but there are only 3 that are required the most in CCNA.
1. Type 1 (Router LSA)
	-every OSPF router generates this type of LSA
	-it identifies the router using router ID
	-it also lists networks attacked to the router's OSPF-activated interfaces.
2. type 2 (Network LSA)
	-Generated by the DR of each 'multi-access' network (the broadcast network type)
	- list the routers which are attached to the multi-access network
3. type 5 (AS External LSA)
	-Generated by ASBRs to describe routes to destinations outside of the AS (OSPF domain)

the LSAs can be checked by `show ip ospf database`



### Day 29 First Hop Redundancy Protocol FHRP###

FHRP (First Hop redundancy protocol ) is a cumputer networking protocol which is designed to protect the default gateway used on a subnetwork by allowing two or more routers to provide backup for that address; in the event of failure of an active router, the backup router will take over the address.
that is why first hop is used due to the gateway.

in FHRPs
- A virtual IP is configured on the two routers, and a virtual MAC is generated for the virtual IP (each FHRP uses a different format for the virtual MAC)

- An active router and a standby router are elected (different FHRPs uses different terms)

- end hosts in the network are configured to use the virtual IP as their default gateway.

- the active router replies to ARP request using the virtual MAC address, so traffic destined for other newtorks will be sent to it.

- if the active router fails, the standby becomes the next active router.
the new actvie router will send gratuitous ARP messages so that switches will update their MAC address tables. It now functions as the default gateway.
note:
Gratuitous ARP: ARP reply sent without being requested.
the frame is broadcast FFFF.FFFF.FFFF (normal ARP replies are unicast)

-if the old active router comes back online, by default it won't take back its role as the active router. it will become standby router
note:
FHRPs are not-preemtive. the current active router will not automatically give up its role, even if the former active router returns. unless it is manually changed.

- you can configure 'preemption', so tha the old active router does take back its old role.


HSRP (Host Standby Router Protocol)
- Cisco proprietary

- an active and standby router are elected

- there are two versions: version 1 and version 2
version 2 adds IPv6 support and increases the number of groups that can be configured

- multicast IPv4 address: v1 = 224.0.0.2
					    v2 = 224.0.0.102

- virtual MAC address: v1 = 0000.0c07.acXX (XX = HSRP group number)
				       v2 = 0000.0c9fXXX (XXX = HSRP group number)

- in a situation with multiple subnets/VLANs, you can configure a different active router in each subnet/VLAN to load balance.
for example R1 can be active and R2 can be standby in VLAN1 and R1 be standby and R2 be active in VLAN2


VRRP (Virtual Router Redundancy Protocol)
- Open standard

- A master and Backup router are elected

- Multicast IPv4 address: 224.0.0.18

-Virtual MAC address: 0000.5e00.01XX (XX = VRRP group number) ex: (0xc8 = 200) so .01c8 will be equal to group number 200

- In a situation with multiple subnets/VLANs, you can configure a different master router in each subnet/VLAN to load balance.


GLBP (Gateway Load Balancing Protocol)
- Cisco Proprietary

- Load balances among multiple routers within a single subnet

- An AVG (Active Virtual Gateway) is elected.

- Up to four AVFs (Active Virtual Forwarders) are assigned by the AVG (the AVG itself can be an AVF too)

- Multicast IPv4 address: 224.0.0.102

- Virtual MAC address: 0007.b400.XXYY (XX= GLBP group number, YY = AVF number)
 

Configuration commands fro HSRP over two routers

on R1 the interface is selected. note that the interface connected to the internet should be selected which is acting as the default gateway.

• R1(config) #interface g0/0

• R1(config-if) #standby <0-255 group number> => in version 1 the group number is vary from 0 to 255 but in version 2 it is 0 to 4095.

• R1(config-if) #standby version 2 => it will change the version to v2 so the group range will increase.
note: v1 and v2 are not compatible so versions should match.

• R1(config-if) #standby 1 ip 172.17.0.254 => to set IP address you want to use as the default gateway (the Virtual IP)

• R1(config-if) #standby 1 priority <0-255> => determine which router to be the active router
note:
the active router determined in this order:
	1. highest priority (default 100)
	2.highest IP address

• R1(config-if) # standby 1 preempt => preempt causes the router to take the role of active router even if another router already has the role.
note: its only neccessary on the router you want to become active preempt

• R1 #show standby => gives information about the HSRP configuration on Router



### Day 30 TCP & UDP ###

Functions of Layer 4 (Transport Layer)
-Provides transparent transfer of data between end-hosts

-Provides (or doesn't provide (base on tcp or udp)) various services to applications:
	-reliable data transer
	-error recovery
	-data sequencing
	-flow control

-provides layer 4 addresing (port numbers: not the phyiscal interfaces):
	-Identify the application layer protocol for example port 80 which indicate HTTP. (TCP): Src:50000 Dst: 80. Src is randomly selected by a PC. and 80 identifies the application layer protocol 
	-Provides session multiplexing


Session:
a session is an exchange of data between two or more communicating devices.


port ranges are designated by IANA (Internet Assigned Number Authority):
Well-known port numbers: 0 - 1023 example. HTTP , FTP,SSH ... selection is restricted
Registered port numbers: 1024 - 49151.
Ephemeral/private/dynamic port numbers: 49152 - 655535. host uses this range when selecting a random source port.


TCP (Transmission Control Protocol)
-TCP is connection-oriented.
	- Before actually sending data to the destination host the two communicate to establish a connection. once the connection is stablished, the data exchange begins.

-TCP provides reliable communication.
	-The destination host must acknowledge that it received each TCP segment.
	-If a segment isn't achnowledged, it is sent again.

-TCP provides sequencing.
	-Sequence numbers in the TCP header allow destintion hosts to put segments in the correct order even if the y arrive out of order.

-TCP provides flow control.
	-The destination host can tell the source host to increase/decrease the rate that data is sent.


Establishing Connections: Three-Way handshake:
1.SYN flag in segment is sent -->
2.SYN flag, ACK flag is received <--
3.ACK flag  is sent -->
then the conncetion will be stablished

Terminating Connections: Four-Way handshake:
1. FIN flag is segment is sent -->
2. ACK flag is recieved <--
2. FIN flag is received <--
4. ACK flag is sent -->
the connection will be terminated

TCP sequencing /Acknowledgment
1. Seq: 10 is sent -->
2. Seq:50 & Ack:11 is received <-- the ack is 1 more number more thatn the seq to be consequented.
3. Seq:11 & Ack:51 is sent -->
4. Seq:52 & Ack: 12 is received <--
...
...
host set a random initial sequence number.
Forward acknowledgement is used to indicate the sequence number of the next segment the host expeects to receive.

TCP Retransmission : for a segment not being acknowledged.
for example:
1.Seq 20 is sent -->
2.ACK 21 is received <--
3.Seq 21 is sent -->
but this time no Ack is received. so the host 1 will wait for certain amount of time and sent the Seq 21 again until Ack 22 is received.


TCP Flow Control: Window Size
-Acknowledging every single segment, no matter what size, is inefficient.

-The TCP header's "Window Size" field allows more data to be sent before an acknowledgment is required.

-A "sliding window" can be used to dynamically adjust how large the window size is.

note that in real situation the sequence numbers get much larger and do not increase by 1 with each message.


UDP (User Datagram Protocol)
-UDP is not connection-oriented
	-the sending host does not establish a connection with the destination host before sending data. the data is simply sent.

-UDP does not provide reliable communication
	-when UDP is used, acknowledgments are not sent for received segments. If a segment is lost, UDP hsa no mechanism to re-transmit it. Segments are sent 'best-effort', it means that there is no guarantee

-UDP does not provide sequencing
	-There is no sequence number filed in the UDP header. If segments arrive out of order, UDP has no mechanism to put them back in order.

-UDP does not provide flow control
	UDP has no mechanism like TCP's window size to control the flow of data.

UDP datagram header only have: Source port, Destination port, Length, Checksum


note:
-TCP provides more feature than UDP, but at the cost of additional overhead.
-There are some applications that use UDP, but provide reliability etc within the application itself. for instance TFTP (Trivial File Transfer Protocol)
- some applications use both TCP & UDP, depending on the situation. for example DNS

retrieving email

Important Port Numbers:
TCP
FTP data (20)
FTP control (21)
SSH (22)
Telnet (23)
SMTP (25) sending email
HTTP (80)
POP3 (110) retrieving email
HTTPS (443)

UDP
DHCP server (67)
DHCP client (68)
TFTP (69)
SNMP agent (161)
SNMP manager (162)
Syslog (514)

TCP & UDP
DNS (53)



### Day 31 IPv6 Part 1 ###
The main reason is that there simply aren't enough IPv4 address available.
however, VLSM, Private IPv4 addresses, and NAT have been used to conserve the use of IPv4 address space but there were short-term solutions.

IANA which controls Ipv5 address assignments, distributes IPv5 address space to various RIRs( Regional Internet Registries) which then assign them to companies that need them:
AFRINIC: for africa continent
APNIC: for east asia and australi
ARIN: north America
LACNIC: south America
RIPE NNC: Europe, middle east , russia

on 25 september of 2015 ARIN declared exhaustion of the ARI IPv4 address pool.

IPv6 descriptions
-Internet Stream Protocl was developed in the later 1970s but never actually introduced for public use.
-It was never called IPv5, but it used a value of 5 in the version field of the IP header.
-So when the succesor to IPv4 was being developed, it was named IPv6


Hexadecimal:

- binary/ base 2 / 0b 
it is binary because it only has 2 digits. 0 & 1
use case:
for instance it is not possible to find out if '10' is binary or not so it is shown as 0b10 which it means binary 10

- Decimal / Base 10 / 0d
0, 1, 2, 3, 4, 5, 6, 7, 8, 9,

- Hexadecimal / Base 16 / 0x
0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F


Binary to Hexadecimal 

0b11011011:     first it should be splited in two decimanl number

0d1101	0d1011: now that is in decimal and it will be equal to 0d13 0d11
0d13	0d11:   convert each 4-bit group to decimal

0xD	0xB:	convert each decimal number to hexadecimal.

0b110111011 => 0xDB that's the answer


IPv6:
an IPv6 address is 128 bits.
2001:0DB8:5917:20َ1:0020:0080:34DB


Shortening (abbreviating) IPv6 addresses

- Leading 0s can be removed
2001:0DB8:000A:001B:20A1:0020:0080:34BD
will be:
2001:DB8:A:1B:20A1:20:80:34BD


- Consecutive quartets of all 0s can be replaced with a double colon (::)
2001:0DB8:0000:0000:0000:0080:34BD
will be:
2001:0DB8::80:34BD
note:
we can commit this because IPv6 address are known for their 8 quartets in length so missing quartets will be replaced by 0.

important:
consecutive quartets of 0s can only bea vvriated once in an IPv6 address
for instance:
2001:0000:0000:0000:20A1:0000:0000:34BD
will become:
2001::20A1:0:0:34BD.
because if we use abbreviation for both sides its difficult to know which side has amount of quertets to be 8 quartets. instead we remove leading 0.


Finding the IPv6 prefix (global unicast addresses)
-Typically, an enterpise requesting IPv6 addresses from their ISP will receive a /48 block.

-Typically IPv6 subnets use a /64 prefix length
that means an entrprise has 16 bits to use to make subnets cause it has received /48 block

- The remaining 64 bits can be used for hosts.


2001:0DB8:8B00:0001:0000:0000:0000:0001/64

2001:0DB8:8B00 => 48-bit 'global routing prefix' assined by the ISP

:0001: (after global routing prefix) => 16-bit 'subnet identifier' used by the enterprise to make various subnets.

0000:0000:0000:0001 => 64-bit 'interface identifier' the host portion of the address


Finding the IPv6 prefix
300D:00F2:0B34:2100:0000:0000:1200:0001/56
number of bits:
(16):(32):(48):2(52)1(56)00(64):(80):(102):(116):(128)

example:
2001:0DB8:0BAD:CAFE:1300:0689:9000:0CDF/71 => 2001:DB8:BAD:CAFE:1200::/71
2001:0DB8:0000:FEED:0DAD:018FL6001:0DA3/62 => 2001:DB8:0:FEEC::/62

note:
2001:db8:0:0::/64 => this subnet is used for documentation and example not in real network

configuring IPv6 address command:
1. • R(config) #ipv6 unicast-routing => to enable ipv6 routing on the router.

configure the interface
2. • R(config) #interface g0/1 => selecting the desired interface
   • R(config-if) #ipv6 address 2001:db8:0:0::1/64 => giving an IP version v6 address to 2001:db8:0:0::/64
   • R(config-if) #no shutdown

• R# show ipv6 interface brief => to show interfaces with IPv6 IP addresses

in 'show ipv6 interface brief' there is actually 2 IPs for each interface.
GigabitEthernet0/1 [up/up]
	1.* FE80:EF8:22FF:FE36:8501 
	2001:DB8:0:1::1

* this Ip is called Link-Local Addresses. they are automatically assigned to interface when they are enabled.
Ipv4 also has link-local but its not automatically assigned.




### Day 32 IPv6 Part 2 ###

Configuring IPv6 addresses (EUI-64)

-EUI stands for extended Unique Identifier or Modified EUI-64

-(Modified) EUI-64 is a method of converting a MAC adress (48-bits) into a 64-bit interface identifier.

-This interface identifier can then become the 'host portition' of a /64 IPv6 address.

-How to convert the MAC address:
1. Divide the MAC address in half
123456789AB => 123456 | 789AB
2. Insert FFFE in the middle
123456FFFE789AB
3.invert the 7th bit:
123456789AB => 2 is 0010 so the 1 will be 0.
103456789AB


Configuring IPv6 addresses (EUI-64)
1. • R(config)# interface g0/0 => selecting the desired interface
2. • R(config)# ipv6 address 2001:db8::/64 => tells the outer to use this prefix plus te EUI-64 interface identifier to generate an IPv6 address.

• R1# show interface g0/0 => to check interface MAC address.

• R1(config-if)#do show ipv6 interface brief => it demonstrate all interface. also the 7th of the binary will be converted.

why inver the 7th bit?
-MAC addres an nbe divided into two types:
1.UAA (University Administered address)
	-Uniquely assigned to the dvice by the manufacturer
2.LAA (Locally Administered Address)
	-Manually assigned by an admin (with the mac-address command on the interface) or protocol. doesn't have to be globally unique.

- you can identify a UAA or LAA by the 7th bit of the MAC address, called the U/L bit (Universal/Local bit):
	-U/L bit set to 0 = UAA
	-U/L bit set to 1 = LAA

in the context of IPv6 addresses/EUI-64, the meaning of the U/L bit is reversed:
	-U/L bit set to - = the MAC address the EUI-64 interface ID was made from was an LAA
	-U/L bit set to  = the MAC address the EUI-64 interface ID was made from was a UAA


Global unicast addresses
-Global unicast IPv6 addresses are public addresses which can be used over the Internet.

- must register to use them. Because they are public addresses, it is expected that they are globally unique.

- Originally define as the 2000::/3 block (2000:: to 3FFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF).
now defined as all addresses which aren't reserved for other purposes.


Unique local addresses
- Unique local IPv6 addresses are private addreses which caanot be used over the internet.

- You do not need to register use them. they can be used freely within internal networks and don't need to e globally unique (*). can't be routed over the internet. the ISP will drop it

- Uses the address block FC00::/7 (FC00:: to FDFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF)
however, a later update requires the 8th bit to be set to 1, so the first two digits must be FD.

- *the global ID should be unique so that addresses don't overlap when companies merge


Link Local Addresses

-Link-local IPv6 addresses are automatically generated on IPv6-enabled interfaces.
use command R1(config-if) # ipv6 enable on an interface to enable IPv6 on that interface.

-Link-local means that these addreses are used for communication within a single link (subnet)
Router will not route packets with a link-local destination IPv6 address.

-Common uses of link-local addresses: routing protocl peerings (OSFPv3 uses link-local addreses for neighbor adjacencies)

-the interface ID is generated using EUI-64 rules.

day 32 IPv6 continues:

Multicast
multicast addresses are one-to-many
	one source to multiple destination (that have joined the sepcific multicast group)

IPv6 uses range FF00::/8 for multicast (FF00:: to FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF)

IPv6 doesn't use broadcast (there is no 'broadcast address')

multicast range for different usecases:

Purpose									IPv6			IPv4
All nodes/hosts (functions like broadcast)	FF02::1		224.0.0.1
All routers								FF02::2		224.0.0.1
All OSPF routers							FF02::5		224.0.0.5
All OSPF DRs/BDRs						FF02::6		224.0.0.6
All RIP routers							FF02::9		224.0.0.9
all EIGRP routers							FF02::A		224.0.0.10


Multicast address scopes:
IPv6 defines multiple multicast 'scopes' which indicate how far the packet should be forwarded. the addresses in the table above use the 'link-local' scope (FF02) which stays in the local subnet.

IPv6 multicast scopes:
- Interface-local (FF01): The packet doesn't leave the local device. Can be used to send traffic to a service within the local device. also known as local node

- Link-local (FF02): The packet remains in the local subnet. Routers will not route the packet between subnets.

- Site-local (FF05): The packet can be forwarded by routers. Should be limited to a single physical location (not forwarded over a WAN)

- Organization-local (FF08): wider in scope that site-local (an entire company/organization)

- Global(FF0E): No boundaries. Possible to be routed over the internet.


Anycast addresses
anycast is a new feature of IPv6
- anycast is 'one-to-one-of-many' it means there are multiple possilbe destination but it is only send to one of them. mixture of multicast and unicast.

- Multiple router are configured with the same IPv6 address.
	they use a routing protocl to advertise the address.
	when hosts send packets to that destination address, routers will forward it to the nearest (referred to smallest routing metric cost) router configured with that IP address (based on routing metric)

- There is no specific address range for anycast addresses. use a regular unicast address (global unicast, unique local) and specify it as an anycast address:
• R(config-if)# ipv6 address 2001:db8:1:1::99/128 anycast

anycast address configuration:
1.R1(config)# interface g0/0 => selecting the interface that is wanted to be configured.
2. R1(cofig-if)# ipv6 address 2001:db8:1:1::99/128 anycast => with anycast in the end we configure this IP to be anycast
3. R1(config) #do show ipv6 interface g0/0 => check the information about anycast of the interface. [ANY] is an indication


Other IPv6 addresses
• :: = the unspecified IPv6 address
	Can be used when a device doesn't yet know its IPv6 address.
	IPv6 default routes are configured ::/0
	IPv4 equivalent: 0.0.0.0

• ::1 = the loopback address
	used to test the protocol stack on the local device
	processed within the local device, but not sent to other devices.
	IPv4 equivalent: 127.0.0.1/8 address range.




### Day 33 IPv6 Part 3 ###

IPv6 Address Representation:
RFC 5952 is a Recommendation for IPv6 address Text representation
RFC (Request for Comments) is a publication from the ISOC (internet Society) and asociated organizations like the IETF (Internet Engineering Task Force), and are the official documents of internet specifications, protocols, procedures, etc.


RFC 5952 suggests standardizing IPv6 address Representation:
- Leading 0s must be removed:
2001:0db8:0000:0001:0f2a:4fff:fea3:00b1
will be:
2001:db8:0:1:fa:4fff:fea3:b1

- :: MUST be used to shroten the longest string of all-0 quartets:
(if there is only one all-0 quartet, don't use '::')
2001:0000:0000:0000:0f2a:0000:0000:00b1
will be:
2001::f2a:0:0:b1

- If there are two equal-length choices for the ::, use :: to shorten the one on the left.
2001:0db8:0000:0000:0f2a:0000:0000:00b1
will be:
2001:db8::f2a:0:0:b1

- Hexadecimal characters (a,b,c,d,e,f) must be written using lower-case, not upper-case (but its not that big deal but it is recommended due to Cisco devices)


IPv6 Headers:
IPv6 is a Fixed Header Format and due to this attiribute it is much more shorter that IPv4 header.

- IPv6 Header - Version: 
Length 4 bits
indicates the version of IP that is used
Fixed value of 6 (0b0110) to indicate IPv6

- IPv6 Header - Traffic Class
Length: 8 bits
Used for QoS (Quality of Service), to indicate high-priority traffic.
For example IP phone traffic, live video calls, etc, will have a traffic class value which gives them priority over other traffic.

- IPv6 Header - Flow Label
Length: 20 bits
Used to identify specfici traffic 'flows' (communications between a specific source and destination)

- IPv6 Header - Payload Length
Length: 16 bits
Indicate the length of the payload (the encapsulated layer 4 segment) in bytes.
The length of IPv6 header itself isn't include, because it's always 40 bytes.

- IPv6 Header - Next Header
Length: 8 bits
Indicate the type of the 'next header' (header of the necapsulated segment) for example TCP or UDP
Same function as the IPv4 header's 'Protocol' field.

- IPv6 header - Hop limit
Length: 8 bits
The value in this field is decremented by 1 by each router that forwawrds it, if it reaches 0, the packet is discarded.
Same function as  the IPv4 header's 'TTL' field.

- IPv6 header - Source / Destination
Length 127 bits each
The se filed contain the IPv6 addresses of the packet's source and detination 


Solicited-Node Multicast address
An IPv6 solicited-node multicast address is calculated from a unicast address.
[ff02:0000:0000:0000:0000:0001:ff] + Last 6 hex digist of unicast address

for example:
2001:0db8:0000:0001:0f2a:4fff:fea3:00b1
will be:
ff02::1:ff:a3:b1

Neighbor Discovery Protocol
- Neighbor Discovery Protocol (NDP) is a protocl used with IPv6
- It has various functions, and one of those functions is to replace ARP (Address Resolution Protocol), which is no longer used in Pv6.
- The ARP-like function uses ICMPv6 and solicited-node multicast addresses to learn the MAC address of other hosts. (ARP is IPv4 uses broadcast)
- Two message types are used:
	1.Neighbor Solicitation (NS) = ICMPv6 Type 135
	2. Neighbor Advertisement (NA) = ICMPv6 Type 136


Neighbor Solicitation Packet fields
for instance R1 is pinging the R2:
1. Source IP: R1 G0/0 IP
2. Destination IP: R2 solicited-node multicast address
3. Source MAC: R1 G0/0 MAC
4. destination MAC: multicast MAC based on R2's solicited-node address.

Neighbor Advertisement (NA) packet fields:
1. Source IP: R2 G0/0 IP
2. Destination IP: R1 G0/0 IP
3. R2 G0/0 MAC
4. Destination MAC: R1 G0/0 MAC

IPv6 Neighbor Table
• R1# show ipv6 neighbor => the IPv6 neighbor table on routers can be shown by this command and to check MAC address, age and state of each addresses.


NDP allows hosts to atumatically discover routers on the local network.
Two messages are used for this process:
1. Router Solicitation (RS) = ICMPv6 Type 133
	Sent to multicast address FF02::2 (all routers)
	Asks all routers on the local link to identify themselves.
	Sent when an interface is enabled/host is connected to the network
2. Router Advertisement (RA) = ICMPv6 Type 134
	Sent to multicast address FF02::1 (all nodes)
	The router announces its presence, as well as other information about the link.
	These messages are sent in response to RS messages.
	They are also sent periodically, even if the router hasn't received an RS.


SLAAC (Stateless Address Auto-configuration)
Host s uses the RS/RA messages to learn the IPv6 Prefix of the local link (ie. 2001:db7::/64), and then automatically generate an IPv6 address.

Using the `ipv6 address prefix/prefix-length eui-64` command, you need to manually enter the prefix.

using the `ipv6 address autoconfig` command, you don't need to enter the pefix. the device uses NDP to learn the pefix used on the local link.

he device wil use EUI-65 togenerate the interface ID , or it will be randomly generated (depending on the device/maker)


Duplicate Address Detection (DAD)
DAD allows host to check if other devices on the local link are using the same IPv6 address.
any time an IPv6-enabled interface initializes it perfomrs DAD.
DAD uses NS and NA. if host doesn't get a reply it knows the address is unique.
if it gets a reply it means another host on the network is already using the address.


IPv6 Static Routing
IPv6 and IPv4 routing works the same, the two processes are separate on the router, and the two routing tables are separated as well.
IPv5 routing is enbaled by default but IP routing is disabled by default, and must be enaled with ipv6 unicast-routing.
If IPv6 routing is disabled, the router will be able to send and receive IPv6 traffic, but will not route IPv6. (will not forward it).


note that:
Routes for link-local addresses are not added to the routing table.
A local host route is automatiically added for each address configured on the router.

command for IPv6 Static Routing
• R(config-if) # ipv6 route destination/prefix-length {next-hop | exit-interface [next-hop]} [ad]
{} => cuerly brackets mean a required choice.
| => pipe stands for 'OR' so either next-hop or exit-interface
[] => square brackets mean an optional choice.

Names for different IP static configuration base on options that are being set.
- Directly attached static route: only the exit interface is specified.
	`ipv6 route destination/prefix-length exit-interface`
example:R1(config)# ipv6 route 2001:db8:0:3::/64 s0/0/0
note:
in IPv6 you can't use directly attached static routes if the interface is an Ethernet interface.

- Recursive static route: only the next hop is specified.
	`ip route destination/prefix-length next-hop`
	R1(config)# ipv6 route 2001:d88:0:3::/64 2001:db8:0:12::2
	
- Fully specified static route: Both the exit interface and next hop are specified.
	`ipv6 route destination/prefix-length exit-interface next-hop`
	R1(config)# ipv6 route 2001:db8:0:3::/64 g0/0 2001:db8:0:12::2

examples:
Network route:
R1(config)# ipv6 route 2001:db8:0:3::/64 2001:db8:0:12::2

Host route:
R2(config)# ipv6 route 2001:db8:0:3::100/128 2001:db8:0:12::1
we use /128 to route for host route.

Default route:
R3(config)# ipv6 route ::/0 2001:db8:23::1


Link-Local Next-Hops
when next-hop and the exit-interface is specificed on the router, the static route is called: "fully specificed static route".
reason you need to specify the exit interface is because, with a link-local next-hop address, the router isn't able to figure out, on its own, which interface that next-hop address is connected to.




### Day 34 ACL ###

Access Control List (ACL)
-ACLs (Access Control Lists) have multiple uses and can be used for security perspective

-ACLs function as a pcaket filter, instructing the router to permit or discard specific traffic.

-ACLs can filter traffic based on source/destination IP addresses, source/destination Layer 4 ports, etc.


How ACLs work
- ACLs are configured globbaly on the router (global config mode)

- They are an ordered sequence of ACEs (Access Control Entries)

for example:
ACL 1:
1. if source IP = 192.168.1.0/24, then permit
2. if source IP = 192.168.2.0/24, then deny
3. if source IP = any, then permit
(the sequence of this configuration is important)

- Configuring an ACL in global config mode will not make the ACL take effect.

- The ACL must be applied to an interface eventhough it is applied on global configuration.

- ACLs are applied either inbound or outbound

- When the router checks a packet against the ACL, it processes the ACEs in order, from top to bottom.

A maximum of one ACL can be applied to a single interface per direction.
Inbound: Maximum of one ACL
Outbound: Maximum of one ACL


Implicit Deny
the Implicit deny tells router to deny all traffic that doesn't match any of the configured entries in the ACL.
there is an 'implicit deny' at the end of all ACLs.


ACL Types

- Standard ACLs: Match based on source IP address only
	Standard Numbered ACLs
	Standard Named ACLs

- Extended ACLs: Match based on Source/Destination IP, Source/Destination Port, etc
	Extended Numbered ACLs
	Extended Named ACLs


Standard Numbered ACLs
- Standard ACLs match traffic based only on the source IP address of the packet.

- Numbered ACLs are identified with a number (ie. ACL 1, ACL 2, etc)

- Different types of ACLs have a different range of numbers that can be used.
	Standard ACLs can be 1-99 and 1300-1999

The basic command to configure a standard numbered ACL is:
• R1(config) # access-list (number) {deny | permit } (ip) (wildcard-mask)

examples:
• R1(config)# access-list 1 deny 1.1.1.1 0.0.0.0 => deny the ip with the specificied wildcard-mask
• R1(config)# access-list 1 deny 1.1.1.1 => deny the ip without specifying the mask
• R1(config)# access-list 1 deny host 1.1.1.1 => blocks only a single host

• R1(config)# access-list 1 permit {any | 0.0.0.0 255.255.255.255} => to permit all IPs

• R1(config)# access-list 1 remakr ## Block foreigner From accounting ## => to add remark or comment to the ACL with number 1.


commands:
• R1(config)# do show access-lists => description about access-list of the network
• R1(config)# do show ip access-lists => shows information about the IP ACLs
• R1(config)# do show running-config | include access-list => shows configuration related to access-lists
• R1(config-if)# ip access-group (number) {in | out } => apply ACL configuration over an interface for outbound or inbound

note:
Standard ACLs should be applied as close to the destination as  possible.


Standard Name ACLs
- Standard Name ACLs match traffic based only on the source IP address of the packet.
- Named ACL are identified with a name (ie. "block_departments")
- Standard named ACLs are configured by entering 'standard named ACL config mode' and then configuring each entry within that config mode.

commands for standard ACLs configuration:
• R(config) # ip access-list standard (acl-name) => to enable standard named ACL
• R(config-std-nacl) # [entry-number] { deny | permit } ip wildcard-mask

commands example:
1. • R(config)# ip access-list standard BLOCK_DEPARTMENT => to create a named access-list
2. • R(config-std-nacl)# 5 deny 1.1.1.1 => denying 1.1.1.1 by entry number of 5 
3. • R(config-std-nacl)# 10 permit any => permit rest of IPs by entry number of 10
4. • R(config-std-nacl)# remkar ## configured NOV 1 2024 ## => adding a remark for better understanding
5. • R(config-std-nacl)# interface g0/0 => selecting an interface to set access-group
6. • R(config-std-nacl)# ip access-group BLOCK_DEPARMENT => adding that interface to specific access-group.

• R# show access-lists => to check the access lists
• R# show running-config | section access-list => to demonstrate running configs that are related to access-list

note:
in `show ip access-lists`
the router may re-order the /32 entries, this improves the efficiency of processing the ACL. it doesn't change the efect of the ACL.
this applies to both standard named and standard numbered ACLs. 
however, packet Tracer does not do this.



### Day 35 Extended Access Control Lists ###

the named ACLs are configured with subcommmands in a separate config mode:
	• R1(config)# ip access-list standard BLOCK_PC1
	• R1(config-std-nacl)# deny 192.168.1.1
	• R1(config-std-nacl)# permit any

however, in modern IOS you can also configure numbered ACLs in the exact same way as named ACLs
	• R1(config)# ip access-list standard 1
	• R1(config-std-nacl)# deny 192.168.1.1
	• R1(config-std-nacl)# permit any


Configuring numbered ACLs with subcommands
• R1(config)# ip access-list standard <1-99> (Standrad IP access-list number) <1300-1999> (standrard IP access-list number (expanded range)) 
• R1(config)# ip access-list standard 1
• R1(config-std-nacl)# deny 192.168.1.1
• R1(config-std-nacl)# permit any
• R1(config-std-nacl)# do show running-config | section access-list => to check out configuration


Advantages of named ACL config:
1. you can easily delete individual entries in the ACL with no (entry-number or sequence-number)
• R1(config-std-nacl)# no (entry-number)
• R1(config)# do show running-config | section access-list => it will delete the whoe ACL from router

when configurinbg/editing numbered ACLs from global config mode, you CAN'T delte individual entries, you can ony delete the entire ACL.

2. you can insert new entries in between other entries by specifying the sequence number 


Resequencing ACLs

• R(config)# ip access-list resequence (acl-id) (starting-seq-num) (increment) => to resequencing function.
example:
R1(config)# ip access-list resequence 1 10 10 => the first '10' change the sequence number of the first entry to 10. the second '10' means add 10 for every entry after that.


Extended ACLs
- Extended ACLs function mostly same as standard ACLs. they can be numbered or named, just like standard ACLs.
	- numbered ACLs use the following ranges: 100-199, 2000-2699

- They are processed from top to bottom, just like standard ACLs. they can match traffic based on more parameters, so they are more precise (and more complex) than standard ACLs.

configuring numbered ACL
• R1(config)# access-list extended {permit | deny} protocol (src-ip dest-ip)

configuring named ACL
• R1(config)# ip access-list extnded {name | number}
• R1(config-ext-nacl)# [seq-num] [permit | deny ] protocol (src-ip dest-ip)

recommendation: use ? to check out more options and command for extended ACL configuration.


Matching Protocol
in extended ACL, Internet Protocols can be denied or permitted via the IP protocol number or with the name list is available and can be seen via '?'.
for example
• R1(config-ext-nacl)# deny (tcp | 6)
• R1(config-ext-nacl)# permit ip => ip stands for any Internet Protocol


Matching the source/destination IP address
in exnteded ACLs to specify a /32 source or destination you have to use the host option or specify the wildcard mask.
example:
• R1(config-ext-nacl)# deny tcp host 192.164.22.1

• R1(config-ext-nacl)# deny tcp any (ip address | host | any, etc) => the values in () are the destination address.

• R1(config-ext-nacl)# deny tcp any 10.0.0.0 0.0.0.255 => deny all traffic on TCP protocol to destination 10.0.0.0/24

• R1(config-ext-nacl)# permit ip any any => allow all traffic

• R1(config-ext-nacl)#deny udp 10.0.0.0 0.0.255.255 host 192.168.1.1 => prevent 10.0.0.0/16 from sending UDP traffic to 192.168.1.1/32

• R1(config-ext-nacl)# deny icmp host 172.16.1.1 192.168.0.0 0.0.0.255 => prevent 172.16.1.1/32 from pinging hosts in 192.168.0.0/24


Matching the TCP/UDP prot numbers
- When matching TCP/UDP you can optionally  specify the source and/or destination port numbers to match.
template:
• R1(config-ext-nacl)# deny tcp (src-ip) {eq} (src-port-num) (dest-ip) eq (dst-port-num)

eq 80 = equal to port 80
gt 80 = greater than 80 (81 and greater)
lt 80 = less than 80 (79 and lesser)
neq 80 = not equal to 80
range 80 100 = from port 80 to 100

example:
• R1(config-std-nacl)# deny tcp any host 1.1.1.1 eq 80 => deny all packets destined for ip address 1.1.1.1/32 TCP port 80

after the destination IP and/or destination port there are other options such as:
ack: match the TCP ACK flag
fin: match the TCP FIN flag
syn: match the TCP SYN flag
ttl: match packet with a specific TTL value
dscp: match packets with a specific DSCP (Differentiated Service Code Point) value.

remember that All of the values must match otherwise, the packet won't match that entry of the ACL. more options more restriction.

permit http 10.0.0.0 0.0.255.255 eq 80 host 2.2.2.2 eq 80


Extended ACLs should e applied as close to the source as possible to limit how far the packets travel in the network before being denied.
(standard ACLs are less specific so if they are applied close to the source there is a risk of blocking more traffic than intended)


command:
R# show ip intrface g0/0 => show applied ACL to defined interface



### Day 36 CDP & LLDP ###

Layer 2 discovery protocols such as CDP (Cisco Discovery Protocol) and LLDP (Link Layer Discovery Protocol) share information with and discover information about neighboring (connected) devices.

- the shared information includes host name, ip address, device type, etc.
- CDP is a cisco proprietary protocol and LLDP is an industry standard protocol (IEEE 802.1AB)

- Because they share information about the devices in the network, they can be considered a security risk and are often not used.


CDP ( Cisco Discovery Protocol)
- CDP is a cisco proprietary protocol and its enabled on Cisco Devices by default.

- CDP messages are periodically sent to multicast MAC address 0100.0CCC.CCCC

- When a device receives a CDP message, it processes and discards the message. not forwarding.

- by default CDP messages are sent once every 60 seconds. and by default the CDP holdtime is 180 seconds. if a message isn't received from a neighbor for 180 seconds, the neighbor is removed from the CDP neighbor table.
CDPv2 messags are sent by default.

command:
• R1# show cdp => shows information about CDP timer 
• R1# show cdp traffic => tells traffic created by CDP that is sent and received
• R1# show cdp interface => shows interfaces with CDP enabled
• R1# show cdp neighbors => a nother way to check the neighbor interfaces if CDP is enbaled on them.
• R1# show cdp neighbor detail => gives more detailed information about CDP neighbors.
• R1# show cdp entry (name) => displays the same info as detail but for the specified neighbor only

• R1(config)# [no] cdp run => to enable or disable CDP globally
• R1(config-if )# [no] cdp enable => to disable CDP on an interface
• R1(config)# cdp timer (second) => configure the CDP timer
• R1(config)# cdp holdtime (seconds) => configure the CDP holdtime


LLDP (Link Layer DIscovery Protocol)
- LLDP is an industry standard protocol. it is disabled on cisco devices by default.
a device can run CDP and LLDP at the same time.

- LLDP mesasges are periodically sent to multicast address 0180.C200.000E
when a device receives an LLDP message, it processes and discard the message. no forwarding.
by default LLDP messages are sent once every 30 seconds. and LLDP holdtime is 120 seconds.

LLDP has an additional timer called the reinitialization delay and it is set to2 second. it is used for preventing flapping

commands:
• R1(config)# lldp run => enables LLDP globally
• R1(config-if)# lldp transmit => enables LLDP on specific interface (tx)
• R1(config-if)# lldp receive => enables LLDP on specific interface (rx)
• R1(config)# lldp timer (seconds) => configure LLDP timer
• R1(config)# lldp holdtime (seconds) => configure LLDP holdtime.
• R1(config)# lldp reinit (seconds) => configure the LLDP reinit timer

• R1# show lldp => shows condition of LLDP and timers on router
• R1# show lldp traffic => shows traffic of LLDP
• R1# show lldp interface => shows interfaces with LLDP enabled
• R1# show lldp neighbors => shows LLDP neighbors
• R1# show lldp neighbors details => shows more detailed information about neighbors




### Day 37 Network Time Protocol (NTP) ###

all devices have an internal clock
in Cisco IOS, time can be viewed by `show clock` command:
• R1# show clock => it will show the default time zone coordiate UTC (Coordinated Universal Time)

if you use the `show clock detail` command, you can see the time source.
• R1# show clock detail
* => it means that time is not considered authoritative
the "Time source is hardawre calendar" => The hardware calendar is the default time source.

the internal hardawre clock of a device will drift over time, so it is not the ideal time source.
the most important reason to have accurate time on a device is to have accurate logs for troubleshooting.


command:
• R1# show log => shows all the logs that are related to the device (router). also the time of each log is important so `show clock` command should be checked before the show log command.


Manual Time Configuration
you can manually configure the time on the device with the `clock set` command
• R1# clock set (hh:mm:ss) (1-31 Day of the month) (Month of the year) (Year)
example:
• R1# clock set 14:30:00 26 Dec 2024 => sets the clock to the indicated time.

note:
although the hardware calendar (built-in clock) is the default time-source, the hardwawre clock and software clock are separate and can be configured separately.

manually configure the hardware clock with the `calendar set` command
• R1# calendar set (day of the month) (month) (year)
example:
• R1# calendar set 14:35:00 27 dec 2024

typically you will want to synchronize the 'clock and 'calendar'. 
use the command `clock update-calendar` to sync the calendar to the clock's time.
use the command `clock read-calendar` to sync the clock to the calendar's time.


Configuring the Time Zone
you can configure the time zone with the `clock timezone` command:
• R2(config)# do show clock => to check the clock time
• R2(config)# clock timezone (name-of-timezone) (-23 - 23 hours-offset-from-UTC) (0-59 Minutes offset from UTC)
but then the adjustment of time may be required:
• R2(config)# clock set(hh:mm:ss) (Day of the month) (month) (year)
example:
• R2(config)# clock timezone JST 9
• R2(config)#do clock set 15:10:00 Dec 27 2024

note:
become part of the running config, that is why it is configured in global config mode.


Daylight Saving Time (summer time): some countries depend on geological location need to set clock forward or backward each year

• R1(config)# clock summer-time (name of time zone in summer) (date | recurring) (week number to start | last/first week of the month) (Day) (month) (time to start hh:mm) (week number to end first/last <1-4>) (Weekday to end) (month to end) (hh:mm time to end) (<1-1440> Offset to ad in minutes)

example:
R1(config)# clock summer-time EDT recurring 2 sunday march 02:00 March 02:00 1 Sunday November 02:00


NTP (Network Time Protocol)
- Manually configuring the time on devices is not scalable and result to inaccurate time.
- NTP allows automatic syncing of time over a network.
- NTP clients euqest the time from NTP servers. a device can be an NTP server and an NTP client at the same time. 
- NTP allows accuracy if time within ~1milisecond if the NTP server is in the same LAN, or within ~50 miliseconds if connecting to the NTP sever over a WAN/the internet.
- Some NTP servers are 'better' than others due to distance of an NTP server. from the original reference clock is called "stratum". higher the stratum the more inaccurate the time is.
- NTP uses UDP port 123.


Reference Clocks
-a reference clock is usually a very accurate time device like an atomic clock or a GPS clock. Reference clocks are stratum 0 within the NTP hierarchy. NTP servers directly connected to reference clocks are stratum 1.
for instance
stratum 1: NTP servers get their time from reference clocks
stratum 2: NTP servers get their time from stratum 1 NTP servers.
stratum 3: get their time from stratum 2 NTP servers.
...
stratum 15: is the maximum. anything above that is considered unreliable.

- Devices can also 'peer' with devices at the same stratum to provide more accurate time. which is called "symmetric acitve" mode. Cisco devices can operate in three NTP modes:
Server mode, Client Mode, Symmetric active mode

- an NTP client can sync to multiple NTP servers

- NTP server which get their time directly from reference clocks are also called primary servers. NTP servers which get their time from other NTP servers are called secondary servers. secondary servers operate as server and client mode.


NTP Configuration:
multiple NTP servers can be defined for the device and devices will automatically select the best server that response faster.
• R1(config)#ntp server 216.239.35.0 => sets the ip for the NTP

for manually config and select a server, `prefer` option can be used
• R1(config)#ntp server 216.239.35.0 prefer

• R1# show ntp associations => it shows the ntp servers associated with device
in table of "ntp associatations":
*sys.peer: the ntp server that is synced with
+candiate: they are candidate server but are not synced
~configured: means configured 
-outlyer, xfalseticker: the NTP will not sync with those NTP servers.

• R1#show ntp status => to check NTP status running on Device

• R1(config)# ntp update-calendar => configures the router tp update hardware clock with the time learned via NTP

note: 
hardware clock initialize the software clock. its a good practice to keep it updated.


configure NTP server over a router:
first set a loopback interface and set it as a NTP server on a Router1
1.• R1(config)# interface loopback0
2.• R1(config-if)# ip address 10.1.1.1 255.255.255.255
3.• R1(config)# ntp source loopback0 => it sets the loopback interface to NTP source.

ntp master setting
• R1(config)# ntp master <1-15> => it sets the ntp master and if the stratum number is not defined it will set it to 8. cause 8 is the ntp default master stratum

ntp symmetric active mode:
• R3(config)#ntp peer (ip address of NTP server) => it will peer to that NTP server 

ntp authentication (optional)
it allows NTP clients to ensure they only sync to the intended server.
to configure NTP authentication:
ntp authenticate => enable authenticate
ntp authentication-key (key-number) md5 (key) => create the NTP authentication key(s)
ntp trusted-key (key-number) => specify the trusted key(s)
ntp server (ip-addresss) key (key-number) => specify which key to use for the server. (this command is not needed on server itself)



### Day 38 DNS (Domain Name Server) ###

DNS is used to resolve human-readable names to IP addresses.
When a domain name is searched in web browser, your device will ask a DNS server for the IP address of that domain name.

command:
• (windows) Ipconfig /all => for demonstrate the configuration of network over a device.
• nslookup (domain name) => for checking the DNS request and the IP address of the domain

Records:
A record: for map names of IPv4 addresses.
AAAA record: for map names of IPv6 addresses.
CName record : Canonical Name related to different zone for requesting DNS
note:
standard DNS queries/responses tupically use UDP port 53. TCP is used for DNS messages greater than 512 bytes or Zone Transfer

Devices will save the DNS server's responses to a local DNS cache. thus repetetive query is not require any more.

• (windows) ipconfig /displaydns => it shows the cached DNS record on Device.
• (windows) ipconfig /flushdns => to clear the device cache 


Host File:
host file is not DNS server, it is an alternative of DNS which it used to be use in OS for resolving IP/domains. 

DNS in Cisco IOS
- for hosts in a network to use DNS, there is no need to configure DNS on the router, they will forward the DNS messages.
- Cisco router can be configured as a DNS server, although it's rare.
- A cisco router can also be configured as a DNS client.

configuration:
1. • R1(config)# ip dns server => configures R1 to act as a DNS server. and response to host if it has the request.
2. • R1(config)# ip host R1 (IP address) => configurre a hostname/IP address for mapping
3. • R1(config)# ip name-server (DNS-server IP) => to set a NS for router to query the unkown records from other DNS server.
4. • R1(config)# ip domain lookup => enables R1 to perfomr DNS queries (enabled by default)

• R1(config)# show hosts => shows the cached entries on Router.

• R1(config)# ip domain name (example.com) => configures the deafult domain name. it appends to any hostnames without a specified domain.
example:
`ping pc1` will become `ping pc1.example.com`



### Day 39 DHCP (Dynamic Host Configuration Protocol)

DHCP is used to allow hosts to automatically/dynamically learn various aspects of their network configuration. such as IP address, default gateway, subnet mask, DNS server etc. Typically used for 'client devices' such as workstation, laptops,etc.
Devices like routers, servers, etc are usally manually configured because they need fixed IP address to function.

In small networks the router typically acts as the DHCP server for hosts in LAN. in large networks the DHCP server is used.

by using network management in windows (GUI) or command `ipconfig /all' (CLI) you can see the DHCP configuration on end hosts

note:
• (Preferred) tag in IPv4 Address means that the PC was previously assigned this IP address by the DHCP server. so it asked to receive the same address again this time.
• Lease Obtained/Expire: DHCP server ' lease' IP address to clients. these leases are usually not permanent, and the client must give up the address at the end of the lease time.

command:
ipconfig /all => shows all configuration of network specially the DHCP
ipconfig /release => it will release the IP address that has obtained from DHCP server
ipconfig /renew => ask DHCP server for a new IP address

DHCP procedures:
1. DHCP Discover: A broadcast massage that is sent from client asking for any DHCP server in the network (Broadcast)
1.2 DHCP release: it also release the IP address if any are exists. the IP address of the requester client will be 0.0.0.0 when requesting for IP and the IP is sent in unicast form (Unicast)

2. DHCP Offer: the DHCP will offer an address to the request of the Client. it will be a unicast due to MAC that is learned (Broadcast or Unicast

3.DHCP Request: it is the message that client sends to indicate that it wants to use  the IP that is offered (Broadcast)

4. DHCP Ack: it is an acknowledgement of DHCP server for the Request message of the client (Broadcast or Unicast)

DHCP D-O-R-A


DHCP Relay
Some network might configure routers to act as the DHCP server for connected LANs. but large enterpirses often use a centralized DHCP server.

if the server is centralized it won't receive the DHCP clients' broadcast DHCP messages.(broadcast messages don't leave the local subnet). to fix it, you can configure a router to act as a DHCP relay agent.
the router will forward the clients' broadcast DHCP messages to the remote DHCP server as unicast messages.


DHCP servr configuration in IOS
• R1(config)#ip dhcp excluded-address 192.168.1.1 192.168.1.100 => specify a range of addresses that won't be givent to the DHCP clients. (for example for further configuration)

• R1(config)#ip dhcp pool [name-of-pool] => it creates a DHCP pool with specificed name

• R1(dhcp-config)#network 192.168.1.0 /24 => specify the sbunet of addreses to be assigned to clients (expect th excluded addressses)

• R1(dhcp-config)#dns-server 8.8.8.8 => specify the DNS server that DHCP clients should use.

• R1(dhcp-config)#domain-name (example.com) specify the domain name of the network (ie PC1 = pc1.example.com)

• R1(dhcp-config)#default-router 192.168.1.254 => specify the default gateway

• R1(dhcp-config)#lease (day) (hours) (minutes) OR infinite => configure the lease time.

• R1#show ip dhcp binding => shows information about DHCP binds


DHCP relay Agent configuration in IOS
• R1(config)# interface g0/1 => configure the interface connected to the subnet of the client devices.

• R1(config-if)#ip  helper-address 192.168.10.10 => configure the IP address of the DHCP server as the 'helper' address. remember that it should have a route to that DHCP server destination IP


DHCP Client Configuration is IOS (rare and not common)
• R1(config)# interface g0/1 => selecting the interface that DHCP configuration needs to applied on

• R1(config-if)# ip address dhcp => use this mode to thell the router to use DHCP to learn its IP address.

• R1(config)#do show ip interface g0/1 => to check the IP address information about the DHCP received IP of that interface



### Day 40 SNMP ###
• Simple Network Management Protocol (SNMP) can be used to monitor the status of devices, make configuration changes, etc.

• There are two main types of devices in SNMP:
1. Managed Devices:
	- These are the devices being managed using SNMP like Routers and Switches.
2.Network Management Station/System (NMS)
	- The devices managing the manged devices
	-This is the SNMP server (but it is actually NMS)


SNMP Operations:
1. Managed devices can notify the NMS of events.
2. The NMS can ask the managed devices for information
3. The NMS can tell the managed devices to change aspects of their configuration


SNMP Components
• NMS components:
	- the SNMP Manager: is the software on the NMS that interfacts with the managed devices. it receives notification, sends requests for information and sends configurations
	- the SNMP Application: provides an interface for the network admin to interact with. Displays alerts, statistics, charts.

• Managed Devices:
	- SNMP Agent: is the SNMP software running on the managed devices that interfact with the SNMP manager on the NMS. it sends notifcations to/receives messages from the NMS.
	- The Management Information Base (MIB): is the structure that contains the variables that are managed by SNMP. Each variable is identified with tan Object ID (OID). for instance, interface status, traffic throughput, CPU usage. etc.


SNMP Object IDs are organized in a hierarchical structure.
.1.3.6.1.2.1.1.5 => 1.iso 3.indetified-organization 6.dod 1.internet 2.mgmt 1.mib-2 1.system 5.sysName
for more information check out oid-info.com


three versions of SNMP that are widely used:
SNMPv1
SNMPv2c
SNMPv3: much more secure version that supports strong encryption and authentication.


SNMP messages
message Class	Description									Messages
-Read			sent by the NMS to read information				Get, GetNext, GetBulk		
-Write			sent by the NMS to change information			Set
-Notification		Sent by managed devices to alert the NMS		Trap,Inform
-Response		sent in response to a previous message/request	Response

Read message:
Get: request sent from the manager to the agent to retrieve the value of a varialbe (OID) or multiple variables.
GetNext: a request sent from the manager to the agent to discover the available variables in te MIB.
GetBulk: a more efficient version of the GetNext message. introduced in SNMPv2

Write message:
Set: a request sent from the manage to the agent to change the value of one or more variables. then agent will send a response with new values.

Notifcation:
Trap: a notifcation sent from the agnet to the manager. manager does not send a Response to acknowledge, so these messages are 'unreliable'
Inform: a notification message that is acknowledged with a Response messages. it is used for communications between managers, but updated for agents too.


SNMP Ports:
SNMP Agent = UDP 161
SNMP Manager = UDP 162


SNMPv2c Configuration
• R1(config)#snmp-server [contact location] (gmail for contact or address for location) => optional information
• R1(config)#snmp-server community (password) ro/rw => configuring the SNMO community sttrings (passwords)
ro = read only = no set messages. rw = read/write = can use set messages.
• R1(config)#snmp-server host (ip address) version (2c) (password) => specify the NMS, version, and community.
• R1(config)#snmp-server enable traps snmp (linkdown linkup) or (trap config) => configure the Trap types to send to the NMS



### Day 41 Syslog ###
Syslog is and industry standard protocol for message logging.
on network devices, Syslog ca nbe used to log events such as changes in interface status (up/down), etc.
Logs are essentials when troubleshooting issues, examing the cuase of incidents, etc.


Syslog message format
seq:time stamp: %facility-severity-MNEMONIC:description
seq: => a sequence number indicating the order/sequence of messages.
time stamp: => a timestamp indicating the time the message was generated (may not be displayed on some devices)
facility => a value that indicates which process on the device generated the message
severity => a number that indicates the severity of logged events
MNEMONIC => a short code for the messages, indicating what happened.
description => detailed information about the event being reported.


Syslog Severity Levels
Level	Keyword			Description
0		Emergency		System is unusable
1		Alert			Action must be taken immediately
2		Critical			Critical conditions
3		Error			Error conditions
4		Warning			Warning conditions
5		Notice			Normal but signifcant condition (notification)
6		Informational		Informational emssages
7		Debugging		Debug-level mesages


Syslog Logging locations
Console line: syslog messages will be displayed in the CLI when connected to the devices via the console port.
VTY lines: syslog messages wil be dispalyed in the CLI when connected to the devices via Telnet/SSH
Buffer: syslog messages will be saved on RAM. yo can veiw the messages with `show logging`
External Server: you can configure the devices to send syslog messages to an external server. Syslog servers will lsiten for messages on UDP port 514.


Syslog Configuration
•R1(config)#logging console (level number/keyword) => configure logging to the console line it will log the levels higher than what is selected ( 6 to 0) or (5 to 0) higher means the severity.

•R1(config)#logging monitor (keyword ex: informational) => logging to the vty lines.

•R1(config)#logging buffer [size ex:8192] (level) => logging to the buffer

•R1(config)#logging (ip address) => to an external server
•R1(config)#logging host (ip address)

•R1(config)#logging trap (keyword) => this sets the logging level for the external NMS server


Terminal monitor
even if `logging monitor (level)` is enable, by default syslog messages will not be displayed when connected via Telnet or SSH.
for the messages to be displayed, you must use `terminal monitor` command. this command must be used every time you connect to the devices via Telnet or SSH.

logging synchronous
command `logging synchronous` for console logs should be used to enable synchronous logging in order to not interrupt on CLI commands. this will cause a new line to be printed if you typing is interrupted by a message.

different of Syslog and SNMP
syslog messages cannot be actively pulled or modified by server such as SNMP Get or SNMP Set.
syslog and SNMP are used together.



### Day 42 SSH (secure shell) ###

Console Port Security
by default no password is needed to access the CLI of a Cisco IOS devices via the console port.
however, you can configure a password on the console line.

• R1(config)#line console 0 => selecting the console 0 (it is always 0 cause only one single console line)
• R1(config)# password (password) => configure th console line's password.
• R1(config)# login => tell the device to require a user to enter the configured password to access.

console port security - login local
• R1(config)#login local => tell the devices to require a user to login using one of the configured usernames on the device.


Layer 2 Switch - Management IP
layer 2 switches don't perform packet routing. however, you can assign an IP address to an SVI (Switch Virtual Interface) to allow remote connection to the CLI of the switch (using Telnet or SSH).

command for configuration:
SW1(config)# interface vlan1
SW1(config)# ip address 192.168.1.253 255.255.255.0
SW1(config)# no shutdown
the commands above configure the IP address on the SVI in the same way as on a multiplayer swtich. enable the interface if necessary.

SW1(config)#ip default gateway 192.168.1.254 => configure the switch's default gateway. in this case, PC2 isn't in the same LAN as SW1. it won't work without default gateway.


Telnet 
Telnet (teletype Network) is a protocol used to remotely access to the CLI of a remote host. it sends data in plain text and No encryption,thus the data can be captured by wireshark. it is largely replaced by SSH for better security. telnet port is on 23

Telent configuration
• SW1(config)# enable secret (password) => enable password/secret. without it exec privileges will not be given.
• SW1(config)# access-list 1 permit host (ip address) => configure an ACL to limit which devices can connect to the VTY lines.
• SW1(config)# line vty 0 15 => telnet/SSH access can be configured for example 16 lines available so it means 16 users can be connected at once for virtual teletype.

• SW1(config-line)# transport input telnet => allows only Telnet connections.
• SW1(config-line)# transport input telnet ssh => allows both
• SW1(config-line)# transport input none => allows no connections.
• SW1(config-line)# transport input all => allows all

• SW1(config-line)# access-class 1 in => apply the ACL to the VTY lines.


SSH (secure shell)
there are two version of SSH, SSH & SSHv2 (which is more secure)
if a device supports both version 1 and 2, it is said tu run 'version 1.99' which it means that both can be supported. ssh is on port 22 TCP.

check SSH support
IOS images that support SSH will have 'k9' in their name exampe: vios_12-ADVENTERPRISEK9-M
NPE (No Payload Encrpytion) IOS images do not support cryptographic features such as SSH.

SSH RSA Keys (Rivest-Shamir-Adleman)
to enable and use SSH, you must generate an RSA public and private key pair.
the keys are used for data encrpytion/decryption, authentication,etc.

configuring RSA keys:
• SW1(config)#ip domain name (domainName) => the FQDN of the device is used to name the RSA keys FQDN = Fully Qualified Domain Name (host name + domain name)

• SW1(config)# crypto key generate rsa => generates the rsa key.

• SW1(config)#show ip ssh => will show the SSH status.

SSH configuration process:
1. Configure host name
2. Configure DNS domain name
3. Generate RSA key pair
4. Configure enabled PW, username/PW
5. Enable SSHv2 (only)
6. Configure VTY lines

Connect: ssh -l (username) (ip-address) or ssh username@ip-address

### Day 43 FTP (File Transfer Protocol) TFTP (Trivial File Trasnfer Protocol) ###
FTP and TFTP are industry protocol standard to transfer files over a network.
they both use a client-server model. Clients can use FTP or TFTP to copy files from/to a server.
as a network engineer, the most common use for FTP is in the process of upgrading the opearint system of a newtork device.
you can download a version of IOS from a server and then rebeoot the device with the new IOS image.

TFTP is a simple and has only basic features compared to FTP. it is another tool to use when lightweight simplicity is more important than functionality.
No authentication (username/password), so server will respond to all TFTP requests. no encryption, so al data is sent in plain text. so it is best used in controlled environment to transfer samll files quickly.
TFTP servers listen on UDP port 69. so it is connectionless and doesn't provide reliability. however, TFTP has similar built-in features for reliability.

TFTP uses 'lock-step' communication. The cloent and server alternately send a message and then wait for a reply. (+retransmissions are sent as needed)

TFTP file transfers have three phases:
1. Connection TFTP client sends a request to the server, and the server responds back, initializing the connection.
2. Data Tranfer: the client and server exchange TFTP messages. one sends data and the other sends acknowledgements.
3. Connection Termination: After the last data message has been sent, a final acknowledgment is sent to terminate the connection.

TFTP TID
when a client sends the first message to the server, the destination port is UDP 69 and the source is a random ephemeral port.
This random port is called a 'Tranfer Identifier' (TID) and indetifies the data transfer.
The server then also selects a random TID to use as the source port when it replies, not 69.
When the client sends the next message, the destination port will be the server's ID, not 69.


FTP uses TCP ports 20 and 21
username and passwords are used for authentication, however there is NO encryption.
For Greater security, FTPS (FTP over SSL/TLS) can be used.
SSH File transfer Protocol (SFTP) can also be used for greater security.
FTP is more ocmple than TFTP and allow clients to navigate file directories, add and remove directory, list files, etc.
the client sends FTP commands to the server to perform these functions.

FTP uses two types of connections:
	- an FTP control connection (TCP 21) is established and used to send FTP commands and replies.
	- When files or data are to be transferred, separate FTP data (TCP 20) connections are establisehd and terminated as needed.

FTP modes:
1. Active Mode FTP data connections
	- The default method of establishin FTP data connection is active mode, in which the server initiates the TCP connections.
	- in FTP active mode, the server initiates the data connection.
2. Passive Mode FTP data connections.
	- the client initiates the data conneciton. this is often necessary when the client is behind a firewall, which could blco kthe incoming connection from the server.
note: firewalls usually don't permit 'outside' devices to initiate connections. in this case FTP passive mode is used and the client (behind firewall) initiates the TCP connection.


IOS file Systems:
a file system is a way of controlling how data is stored and retrieved.
you can view the file systems of a Cisco IOS device with `show file systems`:
tables of show file systems command:
Type:
- disk: storage devices such as flash memory
- opaque: used for internal functions
- nvram: internal NonVolatileRAM. the startup-config files are stored here.
- network: Represents external file systems, for example external FTP/TFTP servers.


Updating Cisco IOS
• R1# show version => you can veiw the current version of IOS with show version of IOS
• R1# show flash => you can veiw the content of flash. ( the  file are are with .bin , .xlm extension)

Copying Files (TFTP)
•R1# copy (src) (dst). example:
 • R1# copy tftp: flash: => it tells the router that you want to have access to TFTP server and copy file to destination which is flash. so Router will ask you to Enter the TFTP server IP. and then the source file name on the server. then you need to enter the name you want to save it as on flash (hit enter to accept the default which is hold in [ ])

upgrading new cisco IOS bin file:
1. • R1(config)# boot system (filepath) => it will reboot the devices with the file that is named which can be the updated file. if you don't use this command, the router will use the first IOS file that it finds in flash.
2. • R1# write memory => you should write it on memory, otherwise, it won't be saved.
3. • R1#reload => should be reload to load new configuration.

Deleting File (lets delete that old IOS file):
• R1#delete (filepath) => it will delete the file with the matched filepath (which can be name of the old IOS file).


Copying Files (FTP)
• R1(config)# (ip-address) ftp (username) (password) => configure the FTP username/password that the device wil use when connecting to an FTP server.



### Day 44 NAT (Network Address Translate) Static addressing ###
There are three main short-term solutions for IPv4 inadequacy:
1) CIDR
2) Private IP addresses
3) NAT

in RFC 1918 specifies the following IPv4 address ranges as private:
10.0.0.0/8 (10.0.0.0 to 10.255.255.255) Class A
172.16.0.0/12 (172.16.0.0 to 172.31.255.255) Class B
192.168.0.0/16 (192.168.0.0 to 192.168.255.255) Class C
you are free to use this addresses and they don't have to be globally unique.
Private IP addresses cannot be used over the internet and will be dropped by ISP, thus the NAT is used.
NAT can be used to router private IP address out in the Internet. it translate the Private IP to Public IP address which should be unique.

Network Address Translation (NAT) is used to modify the source and/or destination IP addresses of packets.
note: NAT in Cisco is more focused on Source NAT and configuration happens on Cisco Routers.


Static NAT:
it involves statically configuring one-to-one mappings of private IP addresses to public IP addresses.
When traffic from the internal host is sent to the outside network, the router will translate the source adddress. however, this one-to-one mapping also allows external host to access the internal host via the inside global address.

An inside local IP address is mapped to an inside global IP address.
	- Inside Local: The IP address of the inside host, from the perspective of the local network
		*the IP address actually confiugred on the inside host, usually a private address.
	- Inside Global: The IP address of the inside host, from the perspective of outside hosts
		*the IP address of the inside host after NAT, usually a public address.

Note:
Static NAT allows devices with private IP addreses to communicate over the internet, However, because it requires a one-to-one IP address mapping, it doesn't preserve IP address.

Static NAT Configuration
1. Define the inside interface(s) connected to the internal network
• R1(config)# int g0/1
• R1(config-if)#ip nat inside
2. Define the outside interface(s) connected to the external network
• R1(config)#int g0/0
• R1(config-if)#ip nat outside
• R1(config-if)# exit
3.configure the one-to-one IP address mappings: `ip nat inside source static (inside-local-ip) (inside-global-ip). each are set for different end-hosts.
• R1(config)# ip nat inside source static 192.168.0.167 100.0.0.1 -> for end-host1
• R1(config)# ip nat inside source static 192.168.0.168 100.0.0.2 -> for end-host2
note: it won't be over write if multiple hosts are translated to one single outside IP
4. check the IP NAT tabel
• R1(config)# ip nat translations => it shows PAT (port address translation), Protocols, and address of outside local, outside global, inside local, inside global.

	- Outside Local: The IP address of the outside host, from the perspective of the local network
	- Outside global: the IP address of the outside host, from the perspective of the outside network.

Insdie/Outside = Location of the host
Local/Global = Perspective


Command to clean ip nat translationt table
• R1#clear ip nat translation * => it cleans the table for further logs.

• R1#show ip nat statistic => it shows all the status of NAT on router.




### Day 45 NAT Dynamic 2/2 ###
• in dynamic NAT, the router dynamically maps inside local addresses to inside global addresses as needed.
• an ACL is used to identify which traffic should be translated.
	- if the source IP is permitted by the ACL, the source IP will be translated.
	- if the source IP is denied by the ACL, the source IP will not be translated. remember that it doesn't mean that it will be dropped.
• A NAT pool is used to defined the available inside global addresses that can be used.
• Although they are dynamically assigned, the mappings are still one-to-one ( one inside local IP address per inside global IP address)
• if there aren't enough inside global IP addresses available (all are currently being used), it is called NAT pool exhaustion:
	- if a packet from another inside host arrives and needs NAT but there are no available addresses, the router will drop the packet.
	- the host will be unable to access outside networks until one of the inside global IP addresses becomes available.
	the dynamic NAT entries will time out automatically if not used, or can clear them manually.


Dynamic NAT configuration
1. Define the inside interface(s) connected to the internal network
• R1(config)# int g0/1
• R1(config-if)#ip nat inside
2. Define the outside interface(s) connected to the external network
• R1(config)# int g0/0
• R1(config-if)#ip nat outside
3. Define the traffic that should be tanslated. traffic permitted by the ACL will be translated.
• R1(config)#access-list 1 permit 1921.168.0.0 0.0.255.255
4. Define the pool of inside gloabl Ip addresses. note: instead of prefix-length 24, you can use netmask 255.255.255.0
• R1(config)#ip nat pool POOL1 100.0.0.0 100.0.0.255 prefix-length 24
5. configure dynamic NAT by mapping the ACL to the pool
• R1(config)#ip nat inside source list 1 pool POOL1
. for checking out:
• R1(config)#show ip nat translations => show translating table of router
• R1(config)#show ip nat statistics => shows the status of NAT configuration on router.


PAT (Port Address Translation) (NAT Overload)
PAT (Aka NAT overload) tansaltes both the IP address and the port number (if necessary).
by using a unique port number for each communication flow, a single public IP address can be used by many different internal hosts. (port number are 16bits = over 65000 available port numbers)
the router will keep track of which inside local address is using which inside global address and port.
because many inside hosts can share a single public IP, PAT is very usefull for preserving public IP addresses, and it is used in networks all over the world.

PAT Configuration (pool)
1. Define the inside interface(s) connected to the internal network
• R1(config)# int g0/1
• R1(config-if)#ip nat inside
2. Define the outside interface(s) connected to the external network
• R1(config)# int g0/0
• R1(config-if)#ip nat outside
3. Define the traffic that should be tanslated. traffic permitted by the ACL will be translated.
• R1(config)#access-list 1 permit 1921.168.0.0 0.0.255.255
4. Define the pool of inside gloabl Ip addresses. note: instead of prefix-length 24, you can use netmask 255.255.255.0
• R1(config)#ip nat pool POOL1 100.0.0.0 100.0.0.3 prefix-length 24
5. Configure PAT by mapping the ACL to the pool and using overloda keyword at the end.
• R1(config)#ip nat inside source list 1 pool POOL1 overload

note:
in `show ip nat translations` for PATH there is no one-to-one mapping, there are many-to-one mapping due to ports.


PAT Configuration (interface)
1. Define the inside interface(s) connected to the internal network
• R1(config)# int g0/1
• R1(config-if)#ip nat inside
2. Define the outside interface(s) connected to the external network
• R1(config)# int g0/0
• R1(config-if)#ip nat outside
3. Define the traffic that should be tanslated. traffic permitted by the ACL will be translated.
• R1(config)#access-list 1 permit 1921.168.0.0 0.0.255.255
4.Configure PAT by mapping the ACL to the interface and enabling overload.
• R1(config)#ip nat inside source list 1 interface g0/0 overload 
note:
that it will use the Router interface public IP address for translating 
