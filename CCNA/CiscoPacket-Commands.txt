__Lab Day-4__
enable => enable the privilege exec mode

configure terminal => it will go to global terminal configuration

exit => comes out

hostname (name) => it will change hostname of device

enable password (password-name) => it will set password with password-name 

show running-config => shows all the running configuration of global terminal 

configuration (it only works in privilege exec mode)

1.conf t 2. service password-encryption => it will enable encrypting password service

R1(config)# do show run => do runs the privilege codes in config mode

R1(config)# enable secret (secret-name) => more secure way of protecting router configuration

R1# write memory or write or copy running-config startup-config => it will save the configuration in startup-config or device

__Lab Day-6__
SW1# show mac address-table => shows the mac address table of switch with their relative interfaces

__Lab Day-8__
Router# show ip interface brief => it will show the interfaces and ip-addresses assign to them

R1(config) #interface gigabitEthernet 0/0 => it will go to configuration of that specific interface

R1(config-if)# ip address (ip address) (mask) => it will set the ip with its mask to that interface to be sent from that
R1(config-if)# description (## description ##) => sets descriptions
R1(config-if)#no shutdown => enables the interface

R1(config-if)#int g0/1 => to switch to other interface which in this case is g0/1

R1(config-if)# end => it will go directly to privilege mode

note:
remember to write memory the configurations

__Lab Day-9__
R1(config-if) #speed (speed in mg) => will set speed of that interface

R1(config-if) # duplex (type) => will set the duplex type of the interface

R1(config-if) #int range g0/1 -2 => will select interface range 1 to 2
R1(config-if-range) # description ## not in use ## => it will set this description to all in the selected range

#show start config => it will show startup-configurations 

#do show interface status => shows swtich interfaces (work only in switches)

__Lab Day-11 (part1)__

R1(config) #ip route (ip address) (mask) (interface or ip of the interface => it determines routes for IPs that are away from router (next hop should be declared if ip is being in used)

R1(config) #do show ip route => it shows the interfaces and routes status

__Lab Day-11 (part2)__
in pc terminal, ipconfig /all => it shows information about macs and IPs

no ip route (ip address) (mask) (hop/interface) => it will delete that route

show run | include ip route => it will show ip routes that are in set in router

note: sometime the routing can be wrong and sometimes even ip of each interface can go wrong. be cautious!

__Lab Day-12__
use show interface (interface name) to see mac address of that interface
use ipconfig /all in PCs to see their mac address in CLI


__Lab Day-15__
show ip interface (interface name) => it will show information about the ip and other property of that interface


__Lab Day-16__

for creating Vlan among switch port and a router we can do such action for range of intefaces.
however it is simple and not really that common to do.

(confing)# range g0/1, f3/1 , f4/1 => selecting targeted interfaces
(config-if-range)# switchport mode access => it enable switchport mode to access for the range that is selected
(config-if-range)# switchport access vlan 10 => it assigns the vlan to it which in this case is 10

# show vlan brief => it will show vlan status

(config)# vlan (number of vlan) => it will go to that vlan configuration
(config-vlan)#name (name-of-vlan) => sets a name for that vlan

__Lab Day-17___

(config-if (g0/1))# switchport trunk allowed vlan (vlan numbers,) => to set trunk for vlans that are in switch and want to be connected to other switches

note: in cisco most of switches are default in Dot1q but it some senarios it should be set

#swtichport trunk native vlan 1001 => set native vlan for switch

#show interface trunk => show trunk interfaces

in router for trunking:
R1(config) # g0/0.10 => setting vlan in this case vlan 10
R1(config-subif) # encaupsulation dot1q 10 => enables encapsulation for vlan
R1(config-subif)# ip address (ip address) (mask) => sets ip and mask for vlan port

__Lab Day-18__

# show run => it shows all configurations that are being run
# show ip interface brief => to list all interfaces with vlans included

R1(config)# no interface g0/0.10 => to remove vlan 10 interface from router

SW2(config)# default interface g1/0/2 => it sets the interface to default configuration

in switch with multiplayer (layer 3) for changing interface configuration we need to pay attention to enable that interface port to be set for layer 3 configurations
command:
SW2(config-if) # no switchport => it will change the layer 2 to layer 3

in multilayer switches, IP routing needs to be activated before being used.
command:
(config) # ip routing => it will enable the routing mode

SVI can be created for vlan by this command:
interface vlan 10
note: in some cases no shutdown for SVIs are required


__Lab Day-19__
 do show interface (interface name) switchport => checking administrative and operational mode

SW1(config-if)# switchport mode trunk => to create a trunk 

SW1(config-if)# switchport nonegotiate => switches the negotiation to off

SW1(config) # do show vtp status => it shows vtp status

SW1(config) # vtp domain (domani-name) => to set a domain name for vtp
 note: other swiches will follow the vtp domain of first switch that is advertising its table

SW1(config)# vtp mode transparent => set the switch vtp mode to transparent.
adding another vlan to transparent vtp will not effect other switches

SW1(config)# vtp mode client =>  it will set switch vtp to client mode thus if a new vlan is created inside the client mode switch it should also be created in vtp switch so it can be advertised and be updated on others


__Lab Day-20__
SW1 #show spanning-tree => shows STP information about that switch

SW1 #show spanning-tree Vlan 1 => shows information about the vlan no.1

SW1 #show spanning-tree detail => shows more detailed information about STP

SW1 #show spanning-tree summary => shows the summary of STP

note: alternate and non-designated have same meaning in cisco

__Lab Day-21__

SW1(config) #Spanning-tree vlan 1 root primary => to create vlan 1 as root primary ( such action cab be used for load balancing)

SW1(config) #Spanning-tree vlan 2 root secondary => sets vlan 2 as the secondary root

SW2 # show spanning-tree vlan 1 => only shows vlan 1 configuration

SW4(config-if) #spanning-tree vlan 1 cost 100 => it changes the cost of selected interface for VPST

SW1(config-if)# spanning-tree vlan 1 port-priority <0-240> => changes port-priority of selected interface in switch

SW3(config-if) #spanning-tree portfast => it enables the portfast for interfaces that are connected to end-hosts

SW3(config-if) # spanning-tree bpduguard enable => enables bpdu guard for selected interface

shutdown and then no shutdown will return the interface up that is being disabled due to bpdu guard

__Lab Day-23__

ASW1(config-if-range) # channel-group 1 mode active => activates selected interfaces to act as ethernetchannel number 1 and LACP

ASW1(config-if-range) # interface po1 => it will set a portchannel1 then ->
switchport mode trunk => will set that portchannel as trunk
by using `show run` you can see the result of trunking interfaces

ASW1(config-if-range) #do show etherchannel summary => shows information of etherchannel that is created
 
#show interface trunk => shows trunk information about interface

DSW2(config-if-range)# channel-group 2 mode on => recommended to use "mode on" for static channel

for multilayer switches, we need to enable IP routing to build a routing table 
(config-if) # ip add 10.0.0.1 255.255.255.0

for multilayer switch to be able to have routing table, we need to enable IP routing
(config) # ip routing => it will enable ip routing
(config) # do show ip routing => it will show Ip table and status

(config) # do show etherchannel load-balance => it will show the load-balance inputs for the etherchannel load balance

(config)# port-channel load-balance (mode) => it will set the load-balance mode to desired mode.


__Lab Day-24__

for adding a static route to the routing table that acts as a backup we need to config its administrative distance higher that the routing protocol that is being used. for such that we do:
(config)# ip route (ip of the destination) (subnet mask of destination) (next hop interface ip) (AD metric): ip route 10.0.1.0 255.255.255.0 203.0.113.5 111

by using `do show ip route`, the in used ip route will be shown but if that interface is down the static rout will be present inside the routing table

by shuting down the interface the static route can be verified
(config) #int g0/1/3
(config-if) #shutdown

by using `tracert or traceroute` we can check out the next hop over network to check whether the backup link or connection to other hops is stablished correctly or not.

loopback also can be used for simulating a setup on routers for example ping 1.1.1.1 and receiving the result of ICMP

__Lab Day-25__

how to enable loopback on an interface
1. go to the global configuration by `configure terminal`
2. add the loopback interface: 
(config) # interface loopback (number example:0)
3. then on that interface (loopback interface) add the ip:
(config-if) #ip address 1.1.1.1 255.255.255.255
4. check it out by `do show ip interface brief`

enable eigrp with Administrative Distance
(config) #router eigrp 100 =>enable the eigrp on router and the 100 is for AD

for enabling EIGRP on all interface we can do:
(config-router) #network 0.0.0.0 255.255.255.255
note that it is not recommended to do it on real networking

or to be more responsible
(config-router) #network 10.0.13.0 0.0.0.3(wildcard of /30)
(config-router) #network 10.0.34.0 0.0.0.3

note: remember to enable passive-interface for loopback interfaces because the router will include EIGRP advertisment on them and waste resources.
(config-router) # 1.1.1.1 0.0.0.0
(config-router) #passive-interface loopback 0
(config-router) # no auto-summary => for disabling classful summary

(config-router) #do show ip protocol => to check out the configuration

for better checking out the neighbor for the EIGRP protocol:
(config-router) # do show ip eigrp neighbors

(config-router) #do show ip route eigrp => it will filter the routes to only the eigrp advertised routes.
or
(config-router) #do show ip route connected => it will show the connected routes

(config-router) #do show ip router eigrp topology => it will show more information about the EIGRP routes that the router has received

